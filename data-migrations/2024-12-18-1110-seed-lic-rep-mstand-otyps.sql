# Top Level Research Domains
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'natural-sciences', 'Natural sciences', 'https://dmptool.org/research_domains/natural-sciences', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'engineering-and-technology', 'Engineering and Technology', 'https://dmptool.org/research_domains/engineering-and-technology', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'medical-and-health-sciences', 'Medical and Health Sciences', 'https://dmptool.org/research_domains/medical-and-health-sciences', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'agricultural-sciences', 'Agricultural Sciences', 'https://dmptool.org/research_domains/agricultural-sciences', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'social-sciences', 'Social Sciences', 'https://dmptool.org/research_domains/social-sciences', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'humanities', 'Humanities', 'https://dmptool.org/research_domains/humanities', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'mathematics', 'Mathematics', 'https://dmptool.org/research_domains/mathematics', (SELECT `id` FROM `researchDomains` WHERE name = 'natural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'computer-and-information-sciences', 'Computer and information sciences', 'https://dmptool.org/research_domains/computer-and-information-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'natural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'physical-sciences', 'Physical sciences', 'https://dmptool.org/research_domains/physical-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'natural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'chemical-sciences', 'Chemical sciences', 'https://dmptool.org/research_domains/chemical-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'natural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'earth-and-environmental-sciences', 'Earth and related environmental sciences', 'https://dmptool.org/research_domains/earth-and-environmental-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'natural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'biological-sciences', 'Biological sciences', 'https://dmptool.org/research_domains/biological-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'natural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'other-natural-sciences', 'Other natural sciences', 'https://dmptool.org/research_domains/other-natural-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'natural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'civil-engineering', 'Civil engineering', 'https://dmptool.org/research_domains/civil-engineering', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'electrical-electronic-information-engineering', 'Electrical engineering, electronic engineering,  information engineering', 'https://dmptool.org/research_domains/electrical-electronic-information-engineering', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'mechanical-engineering', 'Mechanical engineering', 'https://dmptool.org/research_domains/mechanical-engineering', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'chemical-engineering', 'Chemical engineering', 'https://dmptool.org/research_domains/chemical-engineering', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'materials-engineering', 'Materials engineering', 'https://dmptool.org/research_domains/materials-engineering', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'medical-engineering', 'Medical engineering', 'https://dmptool.org/research_domains/medical-engineering', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'environmental-engineering', 'Environmental engineering', 'https://dmptool.org/research_domains/environmental-engineering', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'environmental-biotechnology', 'Environmental biotechnology', 'https://dmptool.org/research_domains/environmental-biotechnology', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'industrial-biotechnology', 'Industrial Biotechnology', 'https://dmptool.org/research_domains/industrial-biotechnology', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'nano-technology', 'Nano-technology', 'https://dmptool.org/research_domains/nano-technology', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'other-engineering-and-technologies', 'Other engineering and technologies', 'https://dmptool.org/research_domains/other-engineering-and-technologies', (SELECT `id` FROM `researchDomains` WHERE name = 'engineering-and-technology'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'basic-medicine', 'Basic medicine', 'https://dmptool.org/research_domains/basic-medicine', (SELECT `id` FROM `researchDomains` WHERE name = 'medical-and-health-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'clinical-medicine', 'Clinical medicine', 'https://dmptool.org/research_domains/clinical-medicine', (SELECT `id` FROM `researchDomains` WHERE name = 'medical-and-health-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'health-sciences', 'Health sciences', 'https://dmptool.org/research_domains/health-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'medical-and-health-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'health-biotechnology', 'Health biotechnology', 'https://dmptool.org/research_domains/health-biotechnology', (SELECT `id` FROM `researchDomains` WHERE name = 'medical-and-health-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'other-medical-sciences', 'Other medical sciences', 'https://dmptool.org/research_domains/other-medical-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'medical-and-health-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'agriculture-forestry-fisheries', 'Agriculture, forestry, and fisheries', 'https://dmptool.org/research_domains/agriculture-forestry-fisheries', (SELECT `id` FROM `researchDomains` WHERE name = 'agricultural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'animal-and-dairy-science', 'Animal and dairy science', 'https://dmptool.org/research_domains/animal-and-dairy-science', (SELECT `id` FROM `researchDomains` WHERE name = 'agricultural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'veterinary-science', 'Veterinary science', 'https://dmptool.org/research_domains/veterinary-science', (SELECT `id` FROM `researchDomains` WHERE name = 'agricultural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'agricultural-biotechnology', 'Agricultural biotechnology', 'https://dmptool.org/research_domains/agricultural-biotechnology', (SELECT `id` FROM `researchDomains` WHERE name = 'agricultural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'other-agricultural-sciences', 'Other agricultural sciences', 'https://dmptool.org/research_domains/other-agricultural-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'agricultural-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'psychology', 'Psychology', 'https://dmptool.org/research_domains/psychology', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'economics-and-business', 'Economics and business', 'https://dmptool.org/research_domains/economics-and-business', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'educational-sciences', 'Educational sciences', 'https://dmptool.org/research_domains/educational-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'sociology', 'Sociology', 'https://dmptool.org/research_domains/sociology', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'law', 'Law', 'https://dmptool.org/research_domains/law', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'political-science', 'Political science', 'https://dmptool.org/research_domains/political-science', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'geography', 'Social and economic geography', 'https://dmptool.org/research_domains/geography', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'media-and-communications', 'Media and communications', 'https://dmptool.org/research_domains/media-and-communications', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'other-social-sciences', 'Other social sciences', 'https://dmptool.org/research_domains/other-social-sciences', (SELECT `id` FROM `researchDomains` WHERE name = 'social-sciences'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'history-and-archaeology',	'History and archaeology', 'https://dmptool.org/research_domains/history-and-archaeology', (SELECT `id` FROM `researchDomains` WHERE name = 'humanities'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'languages-and-literature',	'Languages and literature', 'https://dmptool.org/research_domains/languages-and-literature', (SELECT `id` FROM `researchDomains` WHERE name = 'humanities'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'philosophy-ethics-religion',	'Philosophy, ethics and religion', 'https://dmptool.org/research_domains/philosophy-ethics-religion', (SELECT `id` FROM `researchDomains` WHERE name = 'humanities'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'art', 'Art (arts, history of arts, performing arts, music)', 'https://dmptool.org/research_domains/art', (SELECT `id` FROM `researchDomains` WHERE name = 'humanities'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `researchDomains` (`name`, `description`, `uri`, `parentResearchDomainId`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'other-humanities', 'Other humanities', 'https://dmptool.org/research_domains/other-humanities', (SELECT `id` FROM `researchDomains` WHERE name = 'humanities'), users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

# Output types
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'audiovisual', 'Audiovisual', 'https://dmptool.org/output_types/audiovisual', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'collection', 'Collection', 'https://dmptool.org/output_types/collection', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'data paper', 'Data paper', 'https://dmptool.org/output_types/data_paper', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'dataset', 'Dataset', 'https://dmptool.org/output_types/dataset', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'event', 'Event', 'https://dmptool.org/output_types/event', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'image', 'Image', 'https://dmptool.org/output_types/image', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'interactive resource', 'Interactive resource', 'https://dmptool.org/output_types/interactive_resource', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'model representation', 'Model representation', 'https://dmptool.org/output_types/model_representation', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'physical object', 'Physical object', 'https://dmptool.org/output_types/physical_object', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'service', 'Service', 'https://dmptool.org/output_types/service', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'software', 'Software', 'https://dmptool.org/output_types/software', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'sound', 'Sound', 'https://dmptool.org/output_types/sound', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'text', 'Text', 'https://dmptool.org/output_types/text', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `outputTypes` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT 'workflow', 'Workflow', 'https://dmptool.org/output_types/workflow', users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

# Metadata standards
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ABCD (Access to Biological Collection Data)","<p>The Access to Biological Collections Data (ABCD) Schema is an evolving comprehensive standard for the access to and exchange of data about specimens and observations (a.k.a. primary biodiversity data). The ABCD Schema attempts to be comprehensive and highly structured, supporting data from a wide variety of databases. It is compatible with several existing data standards. Parallel structures exist so that either (or both) atomised data and free-text can be accommodated.</p><p>The ABCD Schema was ratified as a standard by the Biodiversity Information Standards Taxonomic Databases Working Group (TDWG) in 2005. It was developed as a community-driven effort, with contributions from CODATA, BioCASE and GBIF among other organizations.</p>","https://rdamsc.bath.ac.uk/api2/m1", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AgMES (Agricultural Metadata Element Set)","<p>A semantic standard developed by the Food and Agriculture Organization (FAO) of the United Nations, AgMES enables description, resource discovery, interoperability and data exchange of different types of information resources in all areas relevant to food production, nutrition and rural development.</p><p>The standard is maintained by AIMS (Agricultural Information Management Standards), and while it has been used in various application profiles, it is now deprecated for new uses and will no longer be updated.</p>","https://rdamsc.bath.ac.uk/api2/m2", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AVM (Astronomy Visualization Metadata)","<p>The AVM scheme supports the cross-searching of collections of print-ready and screen-ready astronomical imagery rendered from telescopic observations (also known as &#8216;pretty pictures&#8217;). The scheme is compatible with the <a href=""http://www.adobe.com/products/xmp/"">Adobe XMP</a> specification, so the metadata can be embedded within common image formats such as JPEG, TIFF and PNG.</p><p>Such images can combine data acquired at different wavebands and from different observatories. While the primary intent is to cover data-derived astronomical images, there are broader uses as well. Specifically, the most general subset of this schema is also appropriate for describing artwork and illustrations of astronomical subject matter.</p><p>AVM is a proposed recommendation of the International Virtual Observatory Alliance and was last updated in 2011.</p>","https://rdamsc.bath.ac.uk/api2/m3", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CERIF (Common European Research Information Format)","<p>The Common European Research Information Format is the standard that the EU recommends to its member states for recording information about research activity. Since version 1.6 it has included specific support for recording metadata for datasets.</p>","https://rdamsc.bath.ac.uk/api2/m4", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CF (Climate and Forecast) Metadata Conventions","<p>The CF standard was originally framed as a standard for data written in netCDF format, with model-generated climate forecast data particularly in mind. However, it is equally applicable to observational datasets, and can be used to describe other formats. It is a standard for &#8220;use metadata&#8221; that aims both to distinguish quantities (such as physical description, units, and prior processing) and to locate the data in space&#8211;time.</p><p>Sponsored by the NetCDF Climate and Forecast Metadata Convention, the current version dates from December 2011.</p>","https://rdamsc.bath.ac.uk/api2/m5", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CIF (Crystallographic Information Framework)","<p>A well-established standard file structure for the archiving and distribution of crystallographic information, CIF is in regular use for reporting crystal structure determinations to Acta Crystallographica and other journals.</p><p>Sponsored by the International Union of Crystallography, the current standard dates from 1997. As of July 2011, a new version of the CIF standard is under consideration.</p>","https://rdamsc.bath.ac.uk/api2/m6", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CIM (Common Information Model)","<p>The Common Information Model (<a href=""https://earthsystemcog.org/projects/es-doc-models/cim"">CIM</a>) describes climate data, the models and software from which they derive, the geographic grids used to calculate and project them, and the experimental processes (typically simulations) that produced them.</p><p>The CIM was originally developed by the EU-funded Metafor Project. It is now maintained and developed by Earth Science Documentation (ES-DOC). The latest release dates from 2014.</p>","https://rdamsc.bath.ac.uk/api2/m7", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CSMD (Core Scientific Metadata Model)","<p>A study-data oriented model, primarily in support of the ICAT data managment infrastructure software. The CSMD is designed to support data collected within a large-scale facility&#8217;s scientific workflow; however the model is also designed to be generic across scientific disciplines.</p><p>Sponsored by the Science and Technologies Facilities Council, the latest full specification available is v 4.0, from 2013.</p>","https://rdamsc.bath.ac.uk/api2/m8", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Darwin Core","<p>A body of standards, including a glossary of terms (in other contexts these might be called properties, elements, fields, columns, attributes, or concepts) intended to facilitate the sharing of information about biological diversity by providing reference definitions, examples, and commentaries.</p><p>Sponsored by Biodiversity Information Standards (TWDG), the current standard was last modified in October 2009.</p>","https://rdamsc.bath.ac.uk/api2/m9", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Data Package","<p>The Data Package specification is a generic wrapper format for exchanging data. Although it supports arbitrary metadata, the format defines required, recommended, and optional fields for both the package as a whole and the resources contained within it.</p><p>A separate but linked specification provides a way to describe the columns of a data table; descriptions of this form can be included directly in the Data Package metadata.</p>","https://rdamsc.bath.ac.uk/api2/m10", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DataCite Metadata Schema","<p>A set of mandatory metadata that must be registered with the DataCite Metadata Store when minting a DOI persistent identifier for a dataset. The domain-agnostic properties were chosen for their ability to aid in accurate and consistent identification of data for citation and retrieval purposes.</p><p>The scheme is maintained by the DataCite Metadata Working Group in consultation with DataCite members and under the guidance of the DataCite Board.</p>","https://rdamsc.bath.ac.uk/api2/m11", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DCAT (Data Catalog Vocabulary)","<p>By using DCAT to describe datasets in data catalogs, publishers are using a standard model and vocabulary that facilitates the consumption and aggregation of metadata from multiple catalogs, and in doing so can increase the discoverability of datasets. It also makes it possible to have a decentralized approach to publishing data catalogs and makes federated search for datasets across catalogs in multiple sites possible using the same query mechanism and structure. Aggregated DCAT metadata can serve as a manifest file as part of the digital preservation process.</p>","https://rdamsc.bath.ac.uk/api2/m12", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DDI (Data Documentation Initiative)","<p>A widely used, international standard for describing data from the social, behavioral, and economic sciences. Two versions of the standard are currently maintained in parallel:</p><ul><li>DDI Codebook (or DDI version 2) is the simpler of the two, and intended for documenting simple survey data for exchange or archiving. Version 2.5 was released in January 2012.</li><li>DDI Lifecycle (or DDI version 3) is richer and may be used to document datasets at each stage of their lifecycle from conceptualization through to publication and reuse. It is modular and extensible. Version 3.2 was published in March 2014.</li></ul><p>Both versions are XML-based and defined using XML Schemas. They were developed and are maintained by the DDI Alliance.</p>","https://rdamsc.bath.ac.uk/api2/m13", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DIF (Directory Interchange Format)","<p>An early metadata initiative from the Earth sciences community, intended for the description of scientific data sets. It includes elements focusing on instruments that capture data, temporal and spatial characteristics of the data, and projects with which the dataset is associated. It is defined as a W3C XML Schema.</p><p>Sponsored by the Global Change Master Directory, the DIF Writer's Guide Version 6 is from November 2010.</p>","https://rdamsc.bath.ac.uk/api2/m14", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Dublin Core","<p>A basic, domain-agnostic standard which can be easily understood and implemented, and as such is one of the best known and most widely used metadata standards.</p><p>Sponsored by the Dublin Core Metadata Initiative, Dublin Core was published as ISO Standard 15836 in February 2009.</p>","https://rdamsc.bath.ac.uk/api2/m15", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EML (Ecological Metadata Language)","<p>Ecological Metadata Language (EML) is a metadata specification particularly developed for the ecology discipline. It is based on prior work done by the Ecological Society of America and associated efforts (Michener et al., 1997, Ecological Applications).</p>","https://rdamsc.bath.ac.uk/api2/m16", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FGDC/CSDGM (Federal Geographic Data Committee Content Standard for Digital Geospatial Metadata)","<p>A widely-used, but no longer current standard defining the information content for a set of digital geospatial data required by the US Federal Government.</p><p>CSDGM was sponsored by the US Federal Geographic Data Committee. &#160;However, in September 2010 the FGDC endorsed ISO 19115 and began encouraging federal agencies to transition to ISO metadata.</p>","https://rdamsc.bath.ac.uk/api2/m17", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FITS (Flexible Image Transport System)","<p><a href=""http://fits.gsfc.nasa.gov/fits_home.html"">FITS</a> is an image data file format for encoding astronomical data. The WCS (World Coordinate System) conventions map elements in data arrays to standard physical coordinates in the sky. FITS has provisions for image metadata encoded in an ASCII header at the beginning of files.</p>","https://rdamsc.bath.ac.uk/api2/m18", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Genome Metadata","<p>Genome metadata on PATRIC consists of 61 different metadata fields, called attributes, which are organized into the following seven broad categories: Organism Info, Isolate Info, Host Info, Sequence Info, Phenotype Info, Project Info, and Others.</p>","https://rdamsc.bath.ac.uk/api2/m19", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "International Virtual Observatory Alliance Technical Specifications","<p>The technical specifications defined by the IVOA (International Virtual Observatory Alliance) enable interoperability between and the integration of astronomical archives across the world into an international virtual observatory. They include several data models that act as metadata schemas for particular data types: for example, photometry data, simulation data, space-time coordinates, spectral lines data, spectral data, observational data, and the physical parameter space of astronomical datasets.</p><p>These data models are under active development by the IVOA Data Modelling Working Group.</p><p>Additional recommendations have been made for metadata concepts and terms necessary for the discovery and the use of astronomical data collections and services.</p>","https://rdamsc.bath.ac.uk/api2/m20", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ISA-Tab","<p>The Investigation/Study/Assay (ISA) tab-delimited (TAB) format is a general purpose framework with which to collect and communicate complex metadata (i.e. sample characteristics, technologies used, type of measurements made) from 'omics-based' experiments employing a combination of technologies.</p><p>Created by core developers from the University of Oxford, ISA-TAB v1.0 was released in November 2008.</p>","https://rdamsc.bath.ac.uk/api2/m21", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ISO 19115","<p>An internationally-adopted schema for describing geographic information and services. It provides information about the identification, the extent, the quality, the spatial and temporal schema, spatial reference, and distribution of digital geographic data.</p><p>Sponsored by the International Standards Organisation, the first edition of ISO 19115 was published in 2003. It has since been split into parts: ISO 19115-1:2014 contains the fundamentals of the standard; ISO 19115-2:2009 contains extensions for imagery and gridded data; and ISO/TS 19115-3:2016 provides an XML schema implementation for the fundamental concepts compatible with ISO/TS 19138:2007 (Geographic Metadata XML, or GMD).</p>","https://rdamsc.bath.ac.uk/api2/m22", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIBBI (Minimum Information for Biological and Biomedical Investigations)","<p>A common portal to a group of nearly 40 checklists of Minimum Information for various biological disciplines. The MIBBI Foundry is developing a cross-analysis of these guidelines to create an intercompatible, extensible community of standards.</p><p>The concept was realized initially through the joint efforts of the Proteomics Standards Initiative, the Genomic Standards Consortium and the MGED RSBI Working Groups. The latest project to register with MIBBI is the MIABie guidelines for reporting biofilm research, as of January 2012.</p>","https://rdamsc.bath.ac.uk/api2/m23", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIDAS-Heritage","<p>A British cultural heritage standard for recording information on buildings, archaeological sites, shipwrecks, parks and gardens, battlefields, areas of interest and artefacts.</p><p>Sponsored by the Forum on Information Standards in Heritage, MIDAS Version 1.1 was released in October 2012.</p>","https://rdamsc.bath.ac.uk/api2/m24", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NeXus","<p>NeXus is an international standard for the storage and exchange of neutron, x-ray, and muon experiment data. The structure of NeXus files is extremely flexible, allowing the storage of both simple data sets, such as a single data array and its axes, and highly complex data and their associated metadata, such as measurements on a multi-component instrument or numerical simulations. NeXus is built on top of the container format HDF5, and adds domain-specific rules for organizing data within HDF5 files in addition to a dictionary of well-defined domain-specific field names.</p>","https://rdamsc.bath.ac.uk/api2/m25", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OAI-ORE (Open Archives Initiative Object Reuse and Exchange)","<p>The goal of these standards is to expose the rich content in aggregations of Web resources to applications that support authoring, deposit, exchange, visualization, reuse, and preservation. The standards support the changing nature of scholarship and scholarly communication, and the need for cyberinfrastructure to support that scholarship, with the intent to develop standards that generalize across all web-based information including the increasing popular social networks of &#8220;Web 2.0&#8221;.</p>","https://rdamsc.bath.ac.uk/api2/m26", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Observ-OM","<p>Observ-OM is founded on four basic concepts to represent any kind of observation: Targets, Features, Protocols (and their Applications), and Values. It is intended to lower the barrier for future data sharing and facilitate integrated search across panels and species. All models, formats, documentation, and software are available for free and open source (LGPLv3) at <a href=""http://www.observ-om.org"" title=""http://www.observ-om.org"">http://www.observ-om.org</a>.</p>","https://rdamsc.bath.ac.uk/api2/m27", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Observations and Measurements","<p>This encoding is an essential dependency for the OGC Sensor Observation Service (SOS) Interface Standard. More specifically, this standard defines XML schemas for observations, and for features involved in sampling when making observations. These provide document models for the exchange of information describing observation acts and their results, both within and between different scientific and technical communities.</p>","https://rdamsc.bath.ac.uk/api2/m28", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OME-XML (Open Microscopy Environment XML)","<p><a href=""http://www.openmicroscopy.org/Schemas/"">OME-XML</a> is a vendor-neutral file format for biological image data, with an emphasis on metadata supporting light microscopy. It can be used as a data file format in its own right, or as a way of encoding metadata within a TIFF or BigTIFF file (for which purpose there is the <a href=""http://www.openmicroscopy.org/site/support/file-formats/ome-tiff/ome-tiff-specification"">OME-TIFF</a> specification).</p><p>The standard is maintained by the Open Microscopy Environment Consortium, and was last updated in June 2012.</p>","https://rdamsc.bath.ac.uk/api2/m29", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PDBx/mmCIF (Protein Data Bank Exchange Dictionary and the Macromolecular Crystallographic Information Framework)","<p>Protein Data Bank archive (PDB) is the single worldwide archival repository of information about the 3D structures of proteins, nucleic acids, and complex assemblies, managed by the Worldwide PDB (wwPDB). The PDB Exchange Dictionary (PDBx) is used by the wwPDB to define data content for deposition, annotation and archiving of PDB entries. PDBx incorporates the community standard metadata representation, the Macromolecular Crystallographic Information Framework (mmCIF), orginally developed under the auspices of the International Union of Crystallography (IUCr). PDBx has been extended by the wwPDB to include descriptions of other experimental methods that produce 3D macromolecular structure models such as Nuclear Magnetic Resonance Spectroscopy, 3D Electron Microscopy and Tomography.</p>","https://rdamsc.bath.ac.uk/api2/m30", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PREMIS","<p>The PREMIS (Preservation Metadata: Implementation Strategies) Data Dictionary defines a set of metadata that most repositories of digital objects would need to record and use in order to preserve those objects over the long term. It has its roots in the Open Archival Information System Reference Model but has been strongly influenced by the practical experience of such repositories. While the Data Dictionary can be used with other standards to influence the creation of local application profiles, an XML Schema is provided to allow the metadata to be serialized independently.</p> <p>PREMIS was initially developed by the Preservation Metadata: Implementation Strategies Working Group, convened by OCLC and RLG, and is currently maintained by the PREMIS Maintenance Activity, lead by the Library of Congress.</p>","https://rdamsc.bath.ac.uk/api2/m31", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Protocol Data Element Definitions","A draft set of data elements required by the National Institues of Health (U.S.) for the submission of trial information to the <a href=""http://clinicaltrials.gov/ct2/home"">CLincalTrials.gov</a> registry and results database.","https://rdamsc.bath.ac.uk/api2/m32", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PROV","<p>Provenance is information about entities, activities, and people involved in producing a piece of data or thing, which can be used to form assessments about its quality, reliability or trustworthiness. The PROV Family of Documents defines a model, corresponding serializations and other supporting definitions to enable the inter-operable interchange of provenance information in heterogeneous environments such as the Web.</p>","https://rdamsc.bath.ac.uk/api2/m33", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "QuDEx (Qualitative Data Exchange Format)","<p>The QuDEx standard/schema is a software-neutral format for qualitative data that preserves annotations of, and relationships between, data and other related objects. It can be viewed as the optimal baseline data exchange model for the archiving and interchange of data and metadata.</p>","https://rdamsc.bath.ac.uk/api2/m34", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RDF Data Cube Vocabulary","<p>The standard provides a means to publish multi-dimensional data, such as statistics, on the web in such a way that it can be linked to related data sets and concepts using the W3C RDF (Resource Description Framework) standard. The model underpinning the Data Cube vocabulary is compatible with the cube model that underlies SDMX (Statistical Data and Metadata eXchange), an ISO standard for exchanging and sharing statistical data and metadata among organizations.</p>","https://rdamsc.bath.ac.uk/api2/m35", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Repository-Developed Metadata Schemas","<p>Some repositories have decided that current standards do not fit their metadata needs, and so have created their own requirements.</p>","https://rdamsc.bath.ac.uk/api2/m36", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SDAC (Standard for Documentation of Astronomical Catalogues)","<p>The Standard for Documentation of Astronomical Catalogues is a set of conventions for archiving astronomical data. As well as path, filename and data format conventions, it also specifies how to construct a plain text description file for documenting the data files. It was developed as an alternative to FITS that would be more suited to archives, permit human inspection, and allow manipulation via standard Unix command-line tools.</p> <p>SDAC was developed by CDS (Centre de Données astronomiques de Strasbourg). Version 2.0 is the most recent; it was released in February 2000.</p>","https://rdamsc.bath.ac.uk/api2/m37", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SDMX (Statistical Data and Metadata Exchange)","<p>A set of common technical and statistical standards and guidelines to be used for the efficient exchange and sharing of statistical data and metadata.</p><p>Sponsoring institutions include BIS, ECB, EUROSTAT, IMF, OECD, UN, and the World Bank. Technical Specification 2.1 was amended in May 2012.</p>","https://rdamsc.bath.ac.uk/api2/m38", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SPASE Data Model","<p>An information model for describing the elements of the heliophysics data environment, and a set of resource types which can be used to describe data along with its scientific context, source, provenance, content and location. It is designed to support a federated data system where data may reside at different locations and may be seperated from the metadata which describes it. The preferred expression form is XML.</p><p>The Space Physics Archive Search and Extract (SPASE) effort is implemented by the SPASE Consortium which is composed of representatives of the international Heliophysics data community. The Current Release of the data model (2.2.9) was updated in January 2018.</p>","https://rdamsc.bath.ac.uk/api2/m39", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UKEOF","<p>A metadata standard for describing environmental monitoring activities, programmes, networks and facilities published by the UK Environmental Observation Framework (UKEOF).</p>","https://rdamsc.bath.ac.uk/api2/m40", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ABCDDNA","<p>An extension of the ABCD standard for DNA data.</p>","https://rdamsc.bath.ac.uk/api2/m42", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ABCDEFG (Access to Biological Collection Databases Extended for Geosciences)","<p>An extension of the ABCD standard for Geosciences data.</p>","https://rdamsc.bath.ac.uk/api2/m43", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AGLS Metadata Profile","<p>An application of Dublin Core designed to improve visibility and availability of online resources, originally adapted from the Australian Government Locator Service metadata standard for use in government agencies.</p>","https://rdamsc.bath.ac.uk/api2/m44", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AGRIS Application Profile","<p>A metadata standard drawing on Dublin Core&#160;and&#160;AgMES&#160;created specifically to enhance the description, exchange and subsequent retrieval of agricultural Document-Like Information Objects.</p>","https://rdamsc.bath.ac.uk/api2/m45", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ANZLIC Metadata Profile","<p>A profile of ISO 19115, also mapping to the AGLS profile of Dublin Core, designed to facilitate efficient access to descriptions of information resources, particularly geographic or spatial data.</p>","https://rdamsc.bath.ac.uk/api2/m46", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Apple Core","<p>Darwin Core documentation and recommendations for herbaria.</p>","https://rdamsc.bath.ac.uk/api2/m47", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Asset Description Metadata Schema (ADMS)","<p>Used to describe semantic assets, defined as highly reusable metadata (for example: XML schemata, generic data models) and reference data (for example: code lists, taxonomies, dictionaries, vocabularies) that are used for eGovernment system development.</p>","https://rdamsc.bath.ac.uk/api2/m48", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CARARE metadata schema","<p>An application profile of the MIDAS Heritage standard intended for delivering metadata to the CARARE service environment about an organisation&#8217;s online collections, monument inventory database and digital objects.</p>","https://rdamsc.bath.ac.uk/api2/m49", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "COARDS Conventions","<p>Developed by the Cooperative Ocean-Atmosphere Research Data Service (COARDS), these conventions constitute a standard set of metadata to include in netCDF files, allowing them to be shared and interchanged.</p><p>The COARDS Conventions are generalized and extended by the CF (Climate and Forecast) Metadata Conventions.</p>","https://rdamsc.bath.ac.uk/api2/m51", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Cruise Summary Reports","<p>The National Oceanographic Data Centre's required format for reporting on cruises or field experiments at sea, formulated using tags from the ISO19115 metadata standard.</p>","https://rdamsc.bath.ac.uk/api2/m52", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CSDGM Extensions for Remote Sensing Metadata","<p>An extension to the FGDC/CSDGM metadata standard providing a common terminology and set of definitions for documenting geospatial data obtained by remote sensing.</p>","https://rdamsc.bath.ac.uk/api2/m53", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Darwin Core Geospatial Extension","<p>A protocol-independent XML schema for a geospatial extension to the Darwin Core.</p>","https://rdamsc.bath.ac.uk/api2/m54", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Dryad Metadata Application Profile","<p>An application profile based on the Dublin Core Metadata Initiative Abstract Model, used to describe multi-disciplinary data underlying peer-reviewed scientific and medical literature.</p>","https://rdamsc.bath.ac.uk/api2/m55", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DwC Germplasm","<p>An extension to the Darwin Core standard, it includes additional terms required to describe plant genetic resources and in particular germplasm seed samples.</p>","https://rdamsc.bath.ac.uk/api2/m56", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "eBank UK Metadata Application Profile","<p>A Dublin Core Metadata Application Profile created for the eBank UK project, which provides access to the detailed results of scientific experiments in crystallography.</p>","https://rdamsc.bath.ac.uk/api2/m57", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EDMED Metadata Profile","<p>The European Directory of Marine Environmental Datasets metadata scheme, which is a profile of ISO 19115.</p>","https://rdamsc.bath.ac.uk/api2/m58", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FGDC/CSDGM Biological Data Profile","<p>A profile of the FGDC/CSDGM metadata standard, intended to support the collection and processing of biological data.</p>","https://rdamsc.bath.ac.uk/api2/m59", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FITS World Coordinate System (WCS)","<p>An extension of FITS that enables data to be defined to specify physical, or world coordinates within each pixel in an image. The conventions were orignally proposed in 2002 then incorporated into the 3.0 release of the FITS standard.</p>","https://rdamsc.bath.ac.uk/api2/m60", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GBIF Metadata Profile","<p>Established by a global network of countries and organizations, GBIF is a web portal promoting and facilitating the mobilization, access, discovery and use of biodiversity data. The portal uses a profile of EML; a <a href=""https://web.archive.org/web/20170221051836/http://www.gbif.org:80/resource/80641"">How-to Guide</a> and <a href=""https://web.archive.org/web/20170725085834/http://www.gbif.org:80/resource/80640"">Reference Guide</a> for using the profile are available.</p>","https://rdamsc.bath.ac.uk/api2/m61", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GESMES/TS (Generic Statistical Message for Time Series)","<p>An extension of SDMX used to exchange statistical data and metadata.</p>","https://rdamsc.bath.ac.uk/api2/m62", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GSIM (Generic Statistical Information Model)","<p>A reference framework that provides a common terminology acroos and between statistical organisations; aligns with DDI and SDMX.</p>","https://rdamsc.bath.ac.uk/api2/m63", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HISPID (Herbarium Information Standards and Protocols for Interchange of Data)","<p>An extension to ABCD 2.06, it is designed to allow the storage and transmission of herbarium plant specimen data.</p>","https://rdamsc.bath.ac.uk/api2/m64", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "IMPEx Data Model","<p>A simulation extention to the SPASE data model.</p>","https://rdamsc.bath.ac.uk/api2/m65", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "INSPIRE Metadata Regulation","<p>A profile of ISO 19115:2003, adopted in 2007 as the common metadata standard for the Infrastructure for Spatial Information in the European Community (INSPIRE). The other profiles of ISO 19115 in use in European Member States have been made compliant with INSPIRE.</p>","https://rdamsc.bath.ac.uk/api2/m66", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ISA-TAB Nano","<p>An extension of ISA-TAB specifying the format for representing and sharing information about nanomaterials, small molecules and biological specimens along with their assay characterization data.</p>","https://rdamsc.bath.ac.uk/api2/m67", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "isaconfig-diXa",NULL,"https://rdamsc.bath.ac.uk/api2/m68", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ISO 19115-2 - Imagery and gridded data","<p>An extension of ISO 19115 defining the schema required for describing imagery and gridded data.</p>","https://rdamsc.bath.ac.uk/api2/m69", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ISO 19115 North American Profile","<p>A common profile of ISO19115:2003 between the United States and Canada, designed to enhance interoperability of geographic information metadata in North America.</p>","https://rdamsc.bath.ac.uk/api2/m70", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Marine Community Profile","<p>A profile developed in accordance with ISO 19115 rules by the Australian Ocean Data Centre that supports the documentation and discovery of marine spatial datasets.</p>","https://rdamsc.bath.ac.uk/api2/m71", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIBBI Portal","<p>A list of nearly 40 Minimum Information standards projects registered with the MIBBI initiative.</p>","https://rdamsc.bath.ac.uk/api2/m72", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OME-TIFF (Open Microscopy Environment TIFF)","<p>A specification of how to embed OME-XML metadata within a <a href=""http://partners.adobe.com/public/developer/tiff/"">TIFF</a> or <a href=""http://bigtiff.org/"">BigTIFF</a> image file.</p>","https://rdamsc.bath.ac.uk/api2/m73", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Resource Metadata for the Virtual Observatory","<p>Defines metadata terms and concepts necessary for discovery and use of astronomical data collections and services.</p><p>The extension is based on Dublin Core, but with astronomy-specific extensions.  Resource Metadata are collected in resource ""registries"" that are populated and synchronized using the OAI-PMH (Protocol for Metadata Handling). Version 1.12, March 2007. Developed and maintained by IVOA Resource Registry Working Group and NVO Metadata Working Group</p>","https://rdamsc.bath.ac.uk/api2/m74", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Shoreline Metadata Profile","<p>Providing the format and content for describing data sets related to shoreline and other coastal data sets, this profile complies with the FGDC/CSDGM standard.</p>","https://rdamsc.bath.ac.uk/api2/m75", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SNRNASM ISA-Tab","<p>An ISA-Tab-based standard for reporting the results of single nucleotide resolution nucleic acid structure mapping experiments.</p>","https://rdamsc.bath.ac.uk/api2/m76", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Tabular Data Package","<p>A profile of the Data Package specification, intended for exchanging tabular data in CSV (comma-separated values) format.</p>","https://rdamsc.bath.ac.uk/api2/m77", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TIDCC (Towards an International Data Commons for Crystallography)","<p>A profile of the CSMD model for Australian crystallographic data.</p>","https://rdamsc.bath.ac.uk/api2/m78", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UK AGMAP (Academic Geospatial Metadata Application Profile)","<p>A profile of ISO 19115 designed to support the documentation and discovery of spatial datasets, dataset series and geo services within Higher and Further Education.</p>","https://rdamsc.bath.ac.uk/api2/m79", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UK Gemini","<p>A specification for a set of metadata elements describing geospatial data resources for discovery purposes, based on ISO 19115.</p>","https://rdamsc.bath.ac.uk/api2/m80", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "USGIN (US Geoscience Information Network) Metadata Profile","This metadata scheme is a profile of ISO 19115 and ISO 19119 intended for use by the US Geoscience Information Network to describe a broad range of geoscience information resources. It provides guidance for the population of metadata documents to enable interoperability of catalog service clients with multiple servers conforming to this profile. It specifically targets serialization in XML compliant with ISO 19139.","https://rdamsc.bath.ac.uk/api2/m81", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "VarioML",NULL,"https://rdamsc.bath.ac.uk/api2/m82", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "WaterML",NULL,"https://rdamsc.bath.ac.uk/api2/m83", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "WMO Core Metadata Profile","<p>The World Meteorological Organisation, WMO, has defined a restrictive subset of ISO19115 appropriate for global meteorogical use.</p>","https://rdamsc.bath.ac.uk/api2/m84", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EURISCO Descriptors","This descriptor list is used for uploading information from EPGRIS National Inventories of Plant Genetic Resources to EURISCO, the European Search Catalogue for Plant Genetic Resources. It is intended for use only in data exchange.","https://rdamsc.bath.ac.uk/api2/m85", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "IDF (International DOI Foundation) Metadata Kernel",NULL,"https://rdamsc.bath.ac.uk/api2/m86", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MAGE-TAB",NULL,"https://rdamsc.bath.ac.uk/api2/m87", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MARC (Machine-Readable Cataloging)","MARC is a standard and serialization format for representing bibliographic metadata, originally designed as a way of exchanging bibliographic records between library catalogs. Various different versions have been defined, mostly with national or regional scope, of which MARC 21 is probably the most widely used. There also exists an XML serialization of MARC 21, known as MARCXML.","https://rdamsc.bath.ac.uk/api2/m88", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NetCDF Attribute Convention for Dataset Discovery",NULL,"https://rdamsc.bath.ac.uk/api2/m89", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OECD Dataset Metadata",NULL,"https://rdamsc.bath.ac.uk/api2/m90", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OECD Minimum Data Set",NULL,"https://rdamsc.bath.ac.uk/api2/m91", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OpenAIRE Guidelines","<p>The OpenAIRE Guidelines are a suite of application profiles designed to allow research institutions to make their scholarly outputs visible through the OpenAIRE infrastructure. The profiles are based on established standards and designed to be used in conjunction with the OAI-PMH metadata harvesting protocol:</p><ul><li>The OpenAIRE Guidelines for Literature Repositories are based on Dublin Core;</li><li>The OpenAIRE Guidelines for Data Archives are based on the DataCite Metadata Schema;</li><li>The OpenAIRE Guidelines for CRIS Managers is based on CERIF.</li></ul><p>While the focus of each profile is different, they allow for interlinking and the contextualization of research artefacts.</p>","https://rdamsc.bath.ac.uk/api2/m92", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CEDAR Template Model","Describes the format of the generic metadata artifacts—the templates, elements, and instances—that make up the CEDAR metadata framework and allow for exchange of the metadata artifacts with external systems.","https://rdamsc.bath.ac.uk/api2/m94", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "JSON-LD (JavaScript Object Notation for Linked Data)","Refers to a concept for the use of linked data. It is based on the JSON format and extends this. With JSON-LD, data can be annotated for automatic exchange between web applications and web services, and properly used, data in JSON-LD can be expressed as Linked Data triples.","https://rdamsc.bath.ac.uk/api2/m95", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EAD (Encoded Archival Description)","A standard for encoding archival finding aids using XML in archival and manuscript repositories, implementing the recommendations of the International Council on Archives <a href=""https://www.ica.org/en/isadg-general-international-standard-archival-description-second-edition"">ISAD(G): General International Standard Archival Description</a>.","https://rdamsc.bath.ac.uk/api2/m96", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MODS (Metadata Object Description Schema)","The Metadata Object Description Schema (MODS) is a bibliographic metadata standard implemented in XML. It reimplements a subset of the elements of MARC (Machine Readable Cataloging) using language-based tags instead of numeric ones, and groups them somewhat differently. It is intended both as a simplified version of MARC 21 and as a richer alternative to Dublin Core for applications such as metadata syndication/harvesting and the documentation of digital information packages. It was developed in 2002 by the Library of Congress Network Development and MARC Standards Office along with a group of interested experts.","https://rdamsc.bath.ac.uk/api2/m97", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RIF-CS (Registry Interchange Format – Collections and Services)","<p>The Registry Interchange Format – Collections and Services (RIF-CS) schema was developed as a data interchange format for supporting the electronic exchange of collection and service descriptions. It is a profile of ISO 2146, an information model for registry services for libraries and related organisations, adapting it for use in the research data context.</p><p>It was originally developed by the Australian National Data Service for use with Research Data Australia and the Research Data Australia Registry.</p>","https://rdamsc.bath.ac.uk/api2/m98", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TEI (Text Encoding Initiative) Guidelines","<p>The Text Encoding Initiative (TEI) Guidelines make recommendations about suitable ways of representing those features of textual resources which need to be identified explicitly in order to facilitate processing by computer programs. They specify a set of XML tags in order to mark the textual metadata, text structure, relationship between images and transcriptions and other features of interest. They therefore primarily define a data format, but the TEI Header in particular includes a native set of metadata and may include metadata from other schemas.</p><p>In their decades of community driven development they have developed into a de-facto standard in the production of textual data in the humanities. Since the release of version P5, 2 to 4 new revisions have been released each year.</p>","https://rdamsc.bath.ac.uk/api2/m99", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EngMeta","<p>EngMeta is an XML-based formal definition of information necessary to find, understand, reproduce and reuse data from engineering disciplines. The schema was defined together with engineers from aerodynamics and thermodynamics and lies a focus on computational engineering, but is general enough to cover other engineering disciplines.</p><p>EngMeta defines metadata-fields for the description of the components of the observed system (object of research), the observed variables, the spatial and temporal resolution of the observation and the steps taken in the research process to generate, process, analyse and visualize the data. It is based on existing standards like DataCite, PREMIS, CodeMeta and ExptML and is implemented as two metadata blocks for repositories based on the open-source repository platform Dataverse.</p>","https://rdamsc.bath.ac.uk/api2/m100", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "schema.org"," Schema.org is a collaborative, community activity with a mission to create, maintain, and promote schemas for structured data on the Internet, on web pages, in email messages, and beyond. Schema.org vocabulary can be used with many different encodings, including RDFa, Microdata and JSON-LD. These vocabularies cover entities, relationships between entities and actions, and can easily be extended through a well-documented extension model. Over 10 million sites use Schema.org to markup their web pages and email messages. Many applications from Google, Microsoft, Pinterest, Yandex and others already use these vocabularies to power rich, extensible experiences. ","https://rdamsc.bath.ac.uk/api2/m101", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RO-Crate","RO-Crate is a community effort to establish a lightweight approach to packaging research data with their metadata. It is based on schema.org annotations in JSON-LD, and aims to make best-practice in formal metadata description accessible and practical for use in a wider variety of situations, from an individual researcher working with a folder of data, to large data-intensive computational research environments.","https://rdamsc.bath.ac.uk/api2/m102", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FHIR (Fast Healthcare Interoperability Resources)","<p>FHIR is a set of standards for the exchange of healthcare information and data. It defines metadata schemas for describing various entities relevant to healthcare – such as patients, procedures, and clinical reasoning – as well as protocols for exchanging data and metadata records between systems. The information may be serialized as XML, JSON, ND-JSON, or RDF/Turtle.</p><p>The Infrastructure Package was approved as standard ANSI/HL7 FHIR® R4 INFRASTRUCTURE R1-2019.</p>","https://rdamsc.bath.ac.uk/api2/m103", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RDA (Resource Description Access)","RDA: Resource Description and Access is a package of data elements, guidelines, and instructions for creating library and cultural heritage resource metadata that are well-formed according to international models for user-focused linked data applications.","https://rdamsc.bath.ac.uk/api2/m104", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Plasma-MDS (Plasma Metadata Schema)","Plasma-MDS is used to provide structured disciplinary metadata to data sets in the field of plasma science and technology. Its main aim is to facilitate the discovery and exchange of research data in this field.","https://rdamsc.bath.ac.uk/api2/m105", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ODM (Operational Data Model)","ODM-XML is a data exchange standard, vendor-neutral, platform-independent suited for exchanging and archiving clinical and translational research data, along with their associated metadata, administrative data, reference data, and audit information. ODM-XML facilitates the regulatory-compliant acquisition, archival and exchange of metadata and data. ","https://rdamsc.bath.ac.uk/api2/m106", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "openPMD (Open Standard for Particle-Mesh Data)","<p>OpenPMD provides naming and attribute conventions that allow the exchange of particle and mesh based data from scientific simulations and experiments. The primary goal is to define a minimal set/kernel of meta information that enables the sharing and exchange of data to achieve</p><ul><li>portability between various applications and differing algorithms;</li><li>a unified open-access description for scientific data (publishing and archiving, users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');</li><li>a unified description for post-processing, visualization and analysis.</li></ul><p>OpenPMD suits any kind of hierarchical, self-describing data format, such as, but not limited to ADIOS1 (BP3), ADIOS2 (BP4), HDF5, JSON, and XML.</p>","https://rdamsc.bath.ac.uk/api2/m107", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Minimum Information about any (x) Sequence (MIxS)","MIxS currently consists of three separate checklists; MIGS for genomes, MIMS for metagenomes, and MIMARKS for marker genes. To create a single entry point to all minimum information checklists from the GSC and to the environmental packages, we created an overarching framework, the MIxS standard (publication in Nature Biotechnology). MIxS includes the technology-specific checklists from the previous MIGS and MIMS standards, provides a way of introducing additional checklists such as MIMARKS, and also allows annotation of sample data using environmental packages.","https://rdamsc.bath.ac.uk/api2/m108", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LIDO (Lightweight Information Describing Objects)","LIDO is an XML schema intended for delivering metadata, for use in a variety of online services, from an organization’s online collections database to portals of aggregated resources, as well as exposing, sharing, and connecting data on the web. Its strength lies in its ability to support the typical range of descriptive information about objects of material culture. It can be used for all kinds of objects, e.g., art, architecture, cultural history, history of technology, and natural history. LIDO supports multilingual application environments. Being an application of the CIDOC Conceptual Reference Model (CRM), LIDO is the result of a collaborative effort of international stakeholders in the museum sector, starting in 2008, to create a common solution for contributing cultural heritage content to portals and other repositories of aggregated resources. LIDO is maintained under the patronage of CIDOC - ICOM International Committee for Documentation.","https://rdamsc.bath.ac.uk/api2/m109", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ABCD Zoology","ABCD Zoology is an application profile of ABCD tailored for use in zoological contexts. It was the first official application profile to use the RDF-based version 3.0 of ABCD.","https://rdamsc.bath.ac.uk/api2/m110", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NBO-Q (4DN-BINA-OME-QUAREP Microscopy Metadata Specifications)",NULL,"https://rdamsc.bath.ac.uk/api2/m111", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "REMBI (Recommended Metadata for Biological Images)","Recommended Metadata for Biological Images (REMBI) provides guidelines for metadata for biological images to enable the FAIR sharing of scientific data. REMBI is the result of the bioimaging community coming together to develop metadata standards that describe the imaging data itself, together with supporting metadata such as those describing the biological study and sample.","https://rdamsc.bath.ac.uk/api2/m112", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Sequencing Standard","Sequencing and Microarray Standard","https://www.ncbi.nlm.nih.gov/geo/info/MIAME.html", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "doi Foundation","The DOI Foundation is a not-for-profit organization. We govern the Digital Object Identifier (DOI) system on behalf of the agencies who manage DOI registries and provide services to their respective communities. We are the registration authority for the ISO standard (ISO 26324) for the DOI system and we are governed by our Registration Agencies.","https://www.doi.org/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Brain Imaging Data Structure (BIDS)","A standard for structuring, organizing, and creating appropriate metadata for brain imaging data.","https://bids.neuroimaging.io/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "USGS code.json","All USGS software repositories should contain a code.json metadata file and it's root.","https://www.usgs.gov/products/software/software-management/distribution-usgs-code", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FCS 3.1","Flow cytometry metadata storage","https://onlinelibrary.wiley.com/doi/pdf/10.1002/cyto.a.22018", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MISFISHIE","Minimum Information Specification For In Situ Hybridization and Immunohistochemistry Experiments","https://fairsharing.org/FAIRsharing.ht22t4", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MITI","Minimum Information about Tissue Imaging","https://fairsharing.org/FAIRsharing.c2e4ab", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Synapse Controlled Vocabularies","The standards for defining, managing, and implementing controlled vocabularies for content in Synapse are available in the synapseAnnotations Github repository","https://github.com/Sage-Bionetworks/synapseAnnotations", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "cancer Data Standards Registry and Repository (caDSR)","Within the caDSR, ICD-O-3 codes are incorporated into the Common Data Elements (CDEs) and Value Sets, providing standardized definitions and classifications for cancer-related data elements.","https://cadsr.cancer.gov/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "STROBE","Guidelines for Epidemiological datasets","https://www.equator-network.org/reporting-guidelines/strobe/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CIDOC","Object-oriented model for the publication and interchange of cultural heritage information","https://www.cidoc-crm.org/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MINSEQE","MINSEQE describes the Minimum Information about a high-throughput nucleotide SEQuencing Experiment that is needed to enable the unambiguous interpretation and facilitate reproduction of the results of the experiment. ","https://www.fged.org/projects/minseqe/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIFlowCyt","Standard for flow-cytometry experiments.","https://pubmed.ncbi.nlm.nih.gov/18752282/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "minSCe","Standard for scRNA-seq experiments.","https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9302581/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CIDOC CRM","CIDOC Conceptual Reference Model (CRM) is a conceptual model used in cultural heritage to enable information integration. It provides definitions and a structured framework to describe concepts, relationships, and data used in cultural heritage documentation. The CIDOC CRM, developed and maintained over a period of more than 20 years, was initially proposed by the CIDOC Documentation Standards Working Group and is currently managed by the CIDOC CRM SIG, both of which are working groups of the CIDOC Council. In December 2006, it received official recognition as an ISO standard, and this status was reaffirmed in 2014 under the ISO 21127:2014 designation.","https://rdamsc.bath.ac.uk/api2/m114", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CRMsci","CRMsci is the extension for scientific observation and is specifically designed to support the documentation and integration of scientific data. It provides a structured framework for capturing and describing scientific observations, measurements, and experiments in various domains such as environmental studies, natural sciences, and biodiversity research.","https://rdamsc.bath.ac.uk/api2/m115", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CRMdig","CRMdig, for digital preservation, is an extension tailored for the domain of digital preservation. It provides a conceptual framework for documenting and managing the lifecycle of digital objects, ensuring their long-term preservation and accessibility. CRMdig incorporates additional classes and relationships to capture the unique characteristics and requirements of digital preservation, including concepts such as file formats, metadata, migration, authenticity, and provenance. It can be used to model and manage digital collections, establish preservation policies, and implement strategies for the sustainable preservation of digital materials.","https://rdamsc.bath.ac.uk/api2/m116", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LRMoo","LRMOO, formerly known as FRBoo, is an extension, developed in collaboration with IFLA, for bibliographic information and library cataloguing. It provides a conceptual framework for describing bibliographic entities and their relationships in a structured manner by introducing classes, properties, and relationships that allow for the representation of bibliographic resources, such as books, articles, and other library materials, along with their authors, editions, and related works. LRMoo facilitates the organization and retrieval of bibliographic information by providing a consistent and standardized approach to cataloguing. It enables the modelling of complex relationships between different versions, translations, and editions of a work, as well as the association of works with their creators and subjects.","https://rdamsc.bath.ac.uk/api2/m117", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CRMarchaeo","CRMarchaeo is an extension designed to address the documentation and management of archaeological data and excavation processes. CRMarchaeo expands upon the CIDOC CRM base ontology by introducing additional classes, properties, and relationships that enable the representation of archaeological entities and their contextual information. It also provides a structured framework for capturing and describing archaeological sites, artefacts, stratigraphy, excavation processes, and related archaeological concepts. It supports the documentation of archaeological contexts, including the spatial and temporal dimensions of excavations, stratigraphic relationships, and the association of artefacts with specific layers or features.","https://rdamsc.bath.ac.uk/api2/m118", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CRMtex","CRMtex is the extension defined to address the documentation and representation of text-related cultural heritage objects. It provides a structured framework for describing various types of textual objects, including inscriptions, papyri, manuscripts, and other ancient texts. It aims to facilitate the organization and retrieval of text-related cultural heritage objects by providing a standardised approach to their documentation and description. CRMtex allows cultural heritage institutions, libraries, and research projects to manage and share textual resources effectively. It also enhances the interoperability of text-related data, enabling the integration of textual information from diverse sources, to facilitate scholarly research, textual analysis, and the preservation of textual cultural entities for future generations.","https://rdamsc.bath.ac.uk/api2/m119", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TEI/EPIDOC","TEI/EPIDOC is a collaborative effort that combines the expertise of EpiDoc and the Text Encoding Initiative (TEI). It establishes standardised guidelines and tools for encoding scholarly and educational editions of ancient documents, embracing inscriptions, papyri, manuscripts, and other text-bearing objects. By leveraging a subset of TEI's standard, TEI/EPIDOC enables the representation of texts in a digital form while also addressing the historical context and materiality of the objects. This comprehensive approach allows scholars to publish digital editions that not only encompass the transcription and editorial treatment of the texts but also provide insights into the objects themselves. As a result, TEI/EPIDOC enriches our understanding of ancient civilizations and facilitates the dissemination of knowledge about their tangible heritage. TEI/EPIDOC is currently employed by the EAGLE Project and Epigraphy.info.","https://rdamsc.bath.ac.uk/api2/m120", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OSF Metadata Application Profile (OSF MAP)","The OSF application profile and metadata model documents the structure of metadata stored in the OSF. It represents how data is captured for the primary objects of the OSF: Projects, Registrations, and Preprints, as well as the individual files that make up these objects.","https://osf.io/8yczr/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Frictionless","At the core of Frictionless (opens new window)is a set of patterns for describing data including Table Schema (for tables), Data Resource (for files), and Data Package (for datasets).","https://specs.frictionlessdata.io/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Neurodata Without Borders","Neurodata Without Borders","https://www.nwb.org/nwb-neurophysiology/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "The FAIR Guiding Principles for scientific data management and stewardship","The guidelines are designed to improve knowledge discovery through assisting both humans, and their computational agents, in the discovery of, access to, and integration and analysis of, task-appropriate scientific data and other scholarly digital objects.","https://www.nature.com/articles/sdata201618", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FASTQ","ASTQ format is a text-based format for storing both a biological sequence (usually nucleotide sequence) and its corresponding quality scores. Both the sequence letter and quality score are each encoded with a single ASCII character for brevity.","https://knowledge.illumina.com/software/general/software-general-reference_material-list/000002211", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Environmental Ontology","he Environment Ontology (ENVO) is an expressive, machine-actionable knowledge representation of environmental entities. Using ENVO to describe things like ecosystems, entire planets and other astronomical bodies, their parts, or environmental processes increases the interoperability of environmental descriptions, helping (meta)data records achieve demonstrable FAIRness.","https://sites.google.com/site/environmentontology/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CDISC","CDISC Foundational Standards are the basis of the complete suite of standards, supporting clinical and non-clinical research processes from end to end. Foundational Standards focus on the core principles for defining data standards and include models, domains and specifications for data representation","https://www.cdisc.org", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "STORMS","Strengthening The Organization and Reporting of Microbiome Studies (STORMS) is a checklist for reporting on human microbiome studies, organized into six sections covering all sections of a scientific publication, presented as a table with space for author-provided comments and intended for inclusion in supplementary materials.","https://www.stormsmicrobiome.org/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "National Alzheimers Coordinating Center Uniform Data Set","Specific required data standards applied by the the National Alzheimers Coordinating Center to all funded Alzheimers Disease Research Centers collecting the Uniform Data Set","https://naccdata.org/requesting-data/data-request-process", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Brain Research through Advancing Innovative Neurotechnologies (BRAIN) Initiative - Cell Census Network (BICCN)","BossDB metadata application hosts BICCN-compatible metadata for the BossDB database.","https://biccn.org/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Need to determine","Need to determine in consultation with research partner and in compliance with existing data use agreements","www.needtodetermine.com", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CESSDA CMM - Council of European Social Science Data Archives Metadata Model","<p>The CESSDA Metadata Model contains metadata elements, their definitions and information on other requirements, such as repeatability. The Model is built from the viewpoint of quantitative (social science) data and is based on DDI Lifecycle 3.2 metadata standard.</p>","https://rdamsc.bath.ac.uk/api2/m50", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CESSDA Data Catalogue DDI Profiles","The profiles specify the metadata requirements of the CESSDA Data Catalogue, based on the CESSDA Metadata Model and the DDI specifications.","https://rdamsc.bath.ac.uk/api2/m121", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ODIM/HDF5","EUMETNET Opera Data Information Model v2.4","https://www.eumetnet.eu/wp-content/uploads/2021/07/ODIM_H5_v2.4.pdf", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SILO.TIPS","Proposta de um Padrão de Metadados Para Imagens Médicas","https://silo.tips/download/proposta-de-um-padrao-de-metadados-para-imagens-medicas", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Electroencephalogram","EEG Subject Files","https://nda.nih.gov/data_structure.html?short_name=eeg_sub_files01", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "matlab.task.configureMetadata","matlab.task.configureMetadata opens a file selection dialog box prompting you to select a class definition file, and then opens the Task Metadata dialog box to configure the metadata for the Live Editor task specified by the selected file. The Live Editor uses this metadata to display the task in the Live Editor task gallery as well as in automatic code suggestions and completions.  This function generates a folder named resources that contains the metadata file liveTasks.json. Share this folder when you share your Live Editor task.","https://www.mathworks.com/help/matlab/ref/matlab.task.configuremetadata.html", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "e Metabolomics Standards Initiative-Environmental Context Working Sub-Group, MSI-ECWSG","Metadata on biological samples, processing, technical replicates, fractionation, instrumentation, and configuration will be collected using the e Metabolomics Standards Initiative-Environmental Context Working Sub-Group, MSI-ECWSG and will be submitted in accordance with FAIR data principles to the metabolomics Data Repository Coordinating Center (DRCC).   ","https://msi-workgroups.sourceforge.net/bio-metadata/reporting/env/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CMDI (Component Metadata Infrastructure)","The Component Metadata Infrastructure provides a framework to create and use self-defined metadata formats. It relies on a modular model of so-called metadata components, which can be assembled together, to improve reuse, interoperability and cooperation among metadata modelers. The model is standardised in ISO 24622-1 and ISO 24622-2. The serialization is typically in XML. Metadata in this format are often distributed via OAI-PMH. The definition of data categories is provided externally, for example by linking to schema.org or the Clarin Concept Registry. ","https://rdamsc.bath.ac.uk/api2/m122", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CItation File Format","Citation File Format is a human- and machine-readable file format in YAML 1.2 which provides citation metadata for software. It is maintained openly on GitHub:  https://github.com/citation-file-format/citation-file-format.","https://citation-file-format.github.io/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PIDINST","Instruments play an essential role in creating research data but they are often only identified in scientific literature using free text.  Through the use of globally unique, persistent identifiers (PIDs) such as the Digital Object Identifier (DOI), it is now common practice to establish traceable links between scientific literature and the data that generated it.  Such cross-linking has received considerable attention in the community in recent years and has been generalized to other entities, including people, organizations, funders, etc.  Given the importance of instruments and associated metadata to the assessment of data quality and data reuse, globally unique, persistent and resolvable identification of instruments is also crucial.  The Research Data Alliance Persistent Identification of Instruments Working Group (PIDINST WG) developed and demonstrated a solution for publishing persistent identifiers for instruments at established PID providers.  This solution comprises a metadata schema for the persistent identification of instruments (PIDINST Schema). https://doi.org/10.15497/RDA00070","https://github.com/rdawg-pidinst/schema/blob/master/schema-datacite.rst", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Resource Description Framework (RDF)","RDF is a standard model for data interchange on the Web. RDF has features that facilitate data merging even if the underlying schemas differ, and it specifically supports the evolution of schemas over time without requiring all the data consumers to be changed.  RDF extends the linking structure of the Web to use URIs to name the relationship between things as well as the two ends of the link (this is usually referred to as a “triple”). Using this simple model, it allows structured and semi-structured data to be mixed, exposed, and shared across different applications.  This linking structure forms a directed, labeled graph, where the edges represent the named link between two resources, represented by the graph nodes. This graph view is the easiest possible mental model for RDF and is often used in easy-to-understand visual explanations.","https://www.w3.org/RDF/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UMETRICS","IRIS UMETRICS","https://iris.isr.umich.edu/research-data/2022datarelease-dictionary/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Github-metadata Public"," metadata about a repository.","https://github.com/doowb/github-metadata", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Julia","Metadata.jl ntroduction  The term ","https://docs.juliahub.com/Metadata/AL5Ku/0.2.0/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Medical Subject Headings","The MeSH controlled vocabulary is maintained by the National Library of Medicine. MeSH terms are used in PubMed and other NLM databases to describe and search for biomedical information.","https://www.nlm.nih.gov/mesh/meshhome.html", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MEDIN discovery metadata standard","The MEDIN Discovery Metadata Standard is a marine profile of the UK government Standard GEMINI and also complies with other international conventions such as INSPIRE and ISO19115.","https://rdamsc.bath.ac.uk/api2/m123", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DCAT-AP","DCAT-AP is an application profile of DCAT (Data Catalog Vocabulary W3C Recommendation) to be used in European data portals. It is a universal metadata scheme based on RDF, ready to be further profiled for specific domain needs.","https://rdamsc.bath.ac.uk/api2/m124", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CSV on the Web (CSVW)","CSV on the Web is a W3C Recommendation for describing CSV files on the Web, ensuring their proper description, including mapping to JSON and RDF formats.","https://rdamsc.bath.ac.uk/api2/m125", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "User Review Dataset Metadata Schema","Data Management and Metadata Overview","https://github.com/bxbpel13/Comparative-Study-of-Mobile-App-Rivals/blob/main/Data%20Management%20and%20Metadata%20Overview.pdf", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HUPO-PSi","PSI Recommendation","https://github.com/bigbio/proteomics-sample-metadata/blob/master/psi-document/SDRF_Proteomics_Specification_20230524_Final.pdf", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIAME","NCBI GEO standards and services for microarray data","https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2270403/pdf/nihms41580.pdf", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Lipidomics Standards Initiative","LSI aims to create guidelines for the major lipidomic workflows including sample collection, storage as well as data deconvolution and reporting. This is a community-wide effort covering methodological progress based on the input of researchers in the field.","https://lipidomicstandards.org", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Proteomics Standards Initiative","The Proteomics Standards Initiative (PSI) is a working group of the Human Proteome Organization. It aims to define data standards for proteomics to facilitate data comparison, exchange and verification.","https://hupo.org", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "First Nations Media Australia","First Nations Media Australia (FNMA) is a national peak body for Aboriginal and Torres Strait Islander media, broadcasting, and communications. FNMA was founded in 2001 as the Indigenous Remote Communications Association (IRCA) and expanded its role to become the national peak body in 2016/2017. FNMA is based in Alice Springs, NT. ","https://firstnationsmedia.org.au/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Australian Research Data Commons","The ARDC is Australia’s leading research data infrastructure facility. Learn more about us, who we are, our impact, governance, people, partners and careers at the ARDC. About the ARDC At the Australian Research Data Commons (ARDC), we’re accelerating Australian research and innovation by driving excellence in the creation, analysis and retention of high-quality data assets.  We partner with the research community and industry to build leading-edge digital research infrastructure to provide Australian researchers with competitive advantage through data.","https://ardc.edu.au/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Cross Linguistic Data Formats","A data format to 'allow exchange of cross-linguistic data and decouple development of tools and methods from that of databases, standardized data formats are necessary.'","https://cldf.clld.org/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "National Institute of Mental Health Data Archive","The NDA Data Dictionary contains thousands of clinical assessments that have been used by mental health researchers to collect data for clinical research studies. Many of these assessments are utilized across different research studies, facilitating harmonization, reproducibility, and secondary data us","https://nda.nih.gov/nda/harmonization-standards", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AMB (General metadata profile for educational resources)","An educational metadata profile for the description of teaching and learning resources, which is mainly based on schema.org or Learning Resource Metadata Initiative [LRMI] and also uses parts of Simple Knowledge Organization System [SKOS]. A JSON-LD-compliant data structure is defined in the form of a HTML specification, including a JSON schema against which data can be automatically checked for conformity with the profile.","https://rdamsc.bath.ac.uk/api2/m126", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GROMACS","The topology file is built following the GROMACS specification for a molecular topology","https://manual.gromacs.org/current/reference-manual/topologies/topology-file-formats.html", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Department of Defense Discovery Metadata Standard","The DoD Discovery Metadata Specification (DDMS) is the Intelligence Community (IC) and Department of Defense (DoD) standard representation for resource metadata","https://www.dni.gov/index.php/who-we-are/organizations/ic-cio/ic-technical-specifications/dod-discovery-metadata#:~:text=As%20the%20DoD%20Discovery%20Metadata,and%20IRM%20encoded%20data%20is", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "R packages","DESCRIPTION and NAMESPACE are two important files that provide metadata about your package. The DESCRIPTION file provides overall metadata about the package, such as the package name and which other packages it depends on. The NAMESPACE file specifies which functions your package makes available for others to use and, optionally, imports functions from other packages.","https://r-pkgs.org/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SAS and SAS Viya","SAS data can be bound to metadata and subject to metadata layer permissions. A metadata-bound library is a physical library that is tied to a corresponding metadata object. You use the AUTHLIB procedure to manage metadata-bound libraries.","https://documentation.sas.com/doc/en/pgmsascdc/9.4_3.5/basewn/p1sqkx19bijru4n14lnjjcel1d8w.htm", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Minimum Information About a Plant Phenotyping Experiment (MOAPPE)","MIAPPE is an open, community driven, data standard designed to harmonize data from plant phenotyping experiments. MIAPPE provides a specification including a checklist and a data model of metadata required to adequately describe plant phenotyping experiments.","http://cropnet.pl/phenotypes/wp-content/uploads/2016/04/MIAPPE.pdf", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ODAM Structural Metadata","Open Data for Access and Mining (ODAM) Structural Metadata is a format describing how the metadata should be formatted and what should be included to ensure ODAM compliance for a data set. To comply with this format, two metadata files in TSV format are required in addition to the data file(s). These two files describe the metadata of the dataset, which includes descriptions of measures and structural metadata like references between tables. The metadata lets non-expert users explore and visualize your data. By making data interoperable and reusable by both humans and machines, it also encourages data dissemination according to FAIR principles. The structural metadata is specified in section 'Data collection and preparation' on the website.","https://rdamsc.bath.ac.uk/api2/m127", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ROpenSci","We will follow the structure in ROpenSci","https://ropensci.org/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ABNT","Associação Brasileira de Normas Técnicas","www.abnt.org", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Monografia de dramaturgia","Monografia sobre o assunto","https://repositorio.usp.br/item/001834714", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NIAID Ecosystem Metadata Model","The Portal does not contain data but features descriptions about each dataset and information about each dataset (metadata). The Discovery Portal provides external links that allow users to access the data directly from each repository","https://www.niaid.nih.gov/research/data-ecosystem-discovery-portal", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Gene Expression Omnibus (GEO) data","GEO encourages submitters to supply MIAME- and MINSEQE-compliant data. GEO submission procedures are designed to closely follow the MGEO supports MIAME and MINSEQE checklists; if you provide all requested information, your submission will be compliant. ","https://www.ncbi.nlm.nih.gov/geo/info/faq.html#MIAME", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Binary Alignment file","DNA sequence alignment file","https://samtools.github.io/hts-specs/SAMv1.pdf", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Variant Call Format","DNA sequence called genotypes","https://samtools.github.io/hts-specs/VCFv4.1.pdf", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIRAGE","MIRAGE stands for “Minimum Information Required for A Glycomics Experiment”. Since 2011, the MIRAGE Commission is supported and – together with scientists from the University of Georgia – coordinated by the Beilstein-Institut. Regularly, the MIRAGE Commission reports the progress of its work at the Beilstein Glyco-Bioinformatics Symposia and in scientific journals.     Aims  Development of reporting guidelines  The primary aim of the MIRAGE project is to improve the quality of glycomics data in the scientific literature. Researchers seeking to understand the biochemical structure–function relationships of carbohydrates require detailed descriptions of the assay conditions and the experimental results. Currently, these data are insufficiently reported in the literature. The MIRAGE project focuses on the development of publication guidelines for the data presentation for glycomics research.","https://www.beilstein-institut.de/en/projects/mirage/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Core Information for Metabolomics Reporting","This document specifies the minimal guidelines reporting metabolomics work. It does so in a textual form and seeks in the long term to cover all application areas and analysis technologies. ","https://github.com/MSI-Metabolomics-Standards-Initiative/CIMR/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Observational Medical Outcomes Partnership (OMOP) Common Data Model ","The OMOP Common Data Model (CDM) is an open community data standard, designed to standardize the structure and content of observational data and to enable efficient analyses that can produce reliable evidence.","https://ohdsi.github.io/CommonDataModel/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NERDm","The NERDm schema is used to encode metadata describing various kinds of resources--datasets, data collections, web portals, software, and tools","https://data.nist.gov/dm/nerdm/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Genomic Data Commons","CPTAC is a comprehensive and coordinated effort to accelerate the understanding of the molecular basis of cancer through the application of robust, quantitative, proteomic technologies and workflows. The overarching goal of CPTAC is to improve our ability to diagnose, treat and prevent cancer. To achieve this goal in a scientifically rigorous manner, the NCI launched CPTAC to systematically identify proteins that derive from alterations in cancer genomes and related biological processes, and provide this data with accompanying assays and protocols to the public.","https://gdc.cancer.gov/about-gdc/contributed-genomic-data-cancer-research/clinical-proteomic-tumor-analysis-consortium-cptac", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `metadataStandards` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Digital Imaging and Communications in Medicine (DICOM)","The Digital Imaging and Communications in Medicine (DICOM) standard governs the acquisition, storage, handling, and transmission of medical imaging data and associated information. It is a widely adopted international standard that ensures interoperability between imaging systems and software from different vendors.","https://www.dicomstandard.org/", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

# Licenses
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "0BSD","BSD Zero Clause License","https://spdx.org/licenses/0BSD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AAL","Attribution Assurance License","https://spdx.org/licenses/AAL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ADSL","Amazon Digital Services License","https://spdx.org/licenses/ADSL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AFL-1.1","Academic Free License v1.1","https://spdx.org/licenses/AFL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AFL-1.2","Academic Free License v1.2","https://spdx.org/licenses/AFL-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AFL-2.0","Academic Free License v2.0","https://spdx.org/licenses/AFL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AFL-2.1","Academic Free License v2.1","https://spdx.org/licenses/AFL-2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AFL-3.0","Academic Free License v3.0","https://spdx.org/licenses/AFL-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AGPL-1.0","Affero General Public License v1.0","https://spdx.org/licenses/AGPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AGPL-1.0-only","Affero General Public License v1.0 only","https://spdx.org/licenses/AGPL-1.0-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AGPL-1.0-or-later","Affero General Public License v1.0 or later","https://spdx.org/licenses/AGPL-1.0-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AGPL-3.0","GNU Affero General Public License v3.0","https://spdx.org/licenses/AGPL-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AGPL-3.0-only","GNU Affero General Public License v3.0 only","https://spdx.org/licenses/AGPL-3.0-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AGPL-3.0-or-later","GNU Affero General Public License v3.0 or later","https://spdx.org/licenses/AGPL-3.0-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AMDPLPA","AMD's plpa_map.c License","https://spdx.org/licenses/AMDPLPA.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AML","Apple MIT License","https://spdx.org/licenses/AML.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AMPAS","Academy of Motion Picture Arts and Sciences BSD","https://spdx.org/licenses/AMPAS.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ANTLR-PD","ANTLR Software Rights Notice","https://spdx.org/licenses/ANTLR-PD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ANTLR-PD-fallback","ANTLR Software Rights Notice with license fallback","https://spdx.org/licenses/ANTLR-PD-fallback.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "APAFML","Adobe Postscript AFM License","https://spdx.org/licenses/APAFML.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "APL-1.0","Adaptive Public License 1.0","https://spdx.org/licenses/APL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "APSL-1.0","Apple Public Source License 1.0","https://spdx.org/licenses/APSL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "APSL-1.1","Apple Public Source License 1.1","https://spdx.org/licenses/APSL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "APSL-1.2","Apple Public Source License 1.2","https://spdx.org/licenses/APSL-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "APSL-2.0","Apple Public Source License 2.0","https://spdx.org/licenses/APSL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Abstyles","Abstyles License","https://spdx.org/licenses/Abstyles.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Adobe-2006","Adobe Systems Incorporated Source Code License Agreement","https://spdx.org/licenses/Adobe-2006.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Adobe-Glyph","Adobe Glyph List License","https://spdx.org/licenses/Adobe-Glyph.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Afmparse","Afmparse License","https://spdx.org/licenses/Afmparse.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Aladdin","Aladdin Free Public License","https://spdx.org/licenses/Aladdin.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Apache-1.0","Apache License 1.0","https://spdx.org/licenses/Apache-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Apache-1.1","Apache License 1.1","https://spdx.org/licenses/Apache-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Apache-2.0","Apache License 2.0","https://spdx.org/licenses/Apache-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Artistic-1.0","Artistic License 1.0","https://spdx.org/licenses/Artistic-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Artistic-1.0-Perl","Artistic License 1.0 (Perl)","https://spdx.org/licenses/Artistic-1.0-Perl.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Artistic-1.0-cl8","Artistic License 1.0 w/clause 8","https://spdx.org/licenses/Artistic-1.0-cl8.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Artistic-2.0","Artistic License 2.0","https://spdx.org/licenses/Artistic-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-1-Clause","BSD 1-Clause License","https://spdx.org/licenses/BSD-1-Clause.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-2-Clause","BSD 2-Clause ""Simplified"" License","https://spdx.org/licenses/BSD-2-Clause.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-2-Clause-FreeBSD","BSD 2-Clause FreeBSD License","https://spdx.org/licenses/BSD-2-Clause-FreeBSD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-2-Clause-NetBSD","BSD 2-Clause NetBSD License","https://spdx.org/licenses/BSD-2-Clause-NetBSD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-2-Clause-Patent","BSD-2-Clause Plus Patent License","https://spdx.org/licenses/BSD-2-Clause-Patent.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-2-Clause-Views","BSD 2-Clause with views sentence","https://spdx.org/licenses/BSD-2-Clause-Views.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause","BSD 3-Clause ""New"" or ""Revised"" License","https://spdx.org/licenses/BSD-3-Clause.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-Attribution","BSD with attribution","https://spdx.org/licenses/BSD-3-Clause-Attribution.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-Clear","BSD 3-Clause Clear License","https://spdx.org/licenses/BSD-3-Clause-Clear.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-LBNL","Lawrence Berkeley National Labs BSD variant license","https://spdx.org/licenses/BSD-3-Clause-LBNL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-No-Nuclear-License","BSD 3-Clause No Nuclear License","https://spdx.org/licenses/BSD-3-Clause-No-Nuclear-License.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-No-Nuclear-License-2014","BSD 3-Clause No Nuclear License 2014","https://spdx.org/licenses/BSD-3-Clause-No-Nuclear-License-2014.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-No-Nuclear-Warranty","BSD 3-Clause No Nuclear Warranty","https://spdx.org/licenses/BSD-3-Clause-No-Nuclear-Warranty.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-Open-MPI","BSD 3-Clause Open MPI variant","https://spdx.org/licenses/BSD-3-Clause-Open-MPI.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-4-Clause","BSD 4-Clause ""Original"" or ""Old"" License","https://spdx.org/licenses/BSD-4-Clause.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-4-Clause-Shortened","BSD 4 Clause Shortened","https://spdx.org/licenses/BSD-4-Clause-Shortened.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-4-Clause-UC","BSD-4-Clause (University of California-Specific)","https://spdx.org/licenses/BSD-4-Clause-UC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-Protection","BSD Protection License","https://spdx.org/licenses/BSD-Protection.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-Source-Code","BSD Source Code Attribution","https://spdx.org/licenses/BSD-Source-Code.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSL-1.0","Boost Software License 1.0","https://spdx.org/licenses/BSL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BUSL-1.1","Business Source License 1.1","https://spdx.org/licenses/BUSL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Bahyph","Bahyph License","https://spdx.org/licenses/Bahyph.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Barr","Barr License","https://spdx.org/licenses/Barr.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Beerware","Beerware License","https://spdx.org/licenses/Beerware.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BitTorrent-1.0","BitTorrent Open Source License v1.0","https://spdx.org/licenses/BitTorrent-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BitTorrent-1.1","BitTorrent Open Source License v1.1","https://spdx.org/licenses/BitTorrent-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BlueOak-1.0.0","Blue Oak Model License 1.0.0","https://spdx.org/licenses/BlueOak-1.0.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Borceux","Borceux license","https://spdx.org/licenses/Borceux.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CAL-1.0","Cryptographic Autonomy License 1.0","https://spdx.org/licenses/CAL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CAL-1.0-Combined-Work-Exception","Cryptographic Autonomy License 1.0 (Combined Work Exception)","https://spdx.org/licenses/CAL-1.0-Combined-Work-Exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CATOSL-1.1","Computer Associates Trusted Open Source License 1.1","https://spdx.org/licenses/CATOSL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-1.0","Creative Commons Attribution 1.0 Generic","https://spdx.org/licenses/CC-BY-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-2.0","Creative Commons Attribution 2.0 Generic","https://spdx.org/licenses/CC-BY-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-2.5","Creative Commons Attribution 2.5 Generic","https://spdx.org/licenses/CC-BY-2.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-3.0","Creative Commons Attribution 3.0 Unported","https://spdx.org/licenses/CC-BY-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-3.0-AT","Creative Commons Attribution 3.0 Austria","https://spdx.org/licenses/CC-BY-3.0-AT.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-3.0-US","Creative Commons Attribution 3.0 United States","https://spdx.org/licenses/CC-BY-3.0-US.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-4.0","Creative Commons Attribution 4.0 International","https://spdx.org/licenses/CC-BY-4.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-1.0","Creative Commons Attribution Non Commercial 1.0 Generic","https://spdx.org/licenses/CC-BY-NC-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-2.0","Creative Commons Attribution Non Commercial 2.0 Generic","https://spdx.org/licenses/CC-BY-NC-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-2.5","Creative Commons Attribution Non Commercial 2.5 Generic","https://spdx.org/licenses/CC-BY-NC-2.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-3.0","Creative Commons Attribution Non Commercial 3.0 Unported","https://spdx.org/licenses/CC-BY-NC-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-4.0","Creative Commons Attribution Non Commercial 4.0 International","https://spdx.org/licenses/CC-BY-NC-4.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-ND-1.0","Creative Commons Attribution Non Commercial No Derivatives 1.0 Generic","https://spdx.org/licenses/CC-BY-NC-ND-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-ND-2.0","Creative Commons Attribution Non Commercial No Derivatives 2.0 Generic","https://spdx.org/licenses/CC-BY-NC-ND-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-ND-2.5","Creative Commons Attribution Non Commercial No Derivatives 2.5 Generic","https://spdx.org/licenses/CC-BY-NC-ND-2.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-ND-3.0","Creative Commons Attribution Non Commercial No Derivatives 3.0 Unported","https://spdx.org/licenses/CC-BY-NC-ND-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-ND-3.0-IGO","Creative Commons Attribution Non Commercial No Derivatives 3.0 IGO","https://spdx.org/licenses/CC-BY-NC-ND-3.0-IGO.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-ND-4.0","Creative Commons Attribution Non Commercial No Derivatives 4.0 International","https://spdx.org/licenses/CC-BY-NC-ND-4.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-1.0","Creative Commons Attribution Non Commercial Share Alike 1.0 Generic","https://spdx.org/licenses/CC-BY-NC-SA-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-2.0","Creative Commons Attribution Non Commercial Share Alike 2.0 Generic","https://spdx.org/licenses/CC-BY-NC-SA-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-2.5","Creative Commons Attribution Non Commercial Share Alike 2.5 Generic","https://spdx.org/licenses/CC-BY-NC-SA-2.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-3.0","Creative Commons Attribution Non Commercial Share Alike 3.0 Unported","https://spdx.org/licenses/CC-BY-NC-SA-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-4.0","Creative Commons Attribution Non Commercial Share Alike 4.0 International","https://spdx.org/licenses/CC-BY-NC-SA-4.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-ND-1.0","Creative Commons Attribution No Derivatives 1.0 Generic","https://spdx.org/licenses/CC-BY-ND-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-ND-2.0","Creative Commons Attribution No Derivatives 2.0 Generic","https://spdx.org/licenses/CC-BY-ND-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-ND-2.5","Creative Commons Attribution No Derivatives 2.5 Generic","https://spdx.org/licenses/CC-BY-ND-2.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-ND-3.0","Creative Commons Attribution No Derivatives 3.0 Unported","https://spdx.org/licenses/CC-BY-ND-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-ND-4.0","Creative Commons Attribution No Derivatives 4.0 International","https://spdx.org/licenses/CC-BY-ND-4.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-1.0","Creative Commons Attribution Share Alike 1.0 Generic","https://spdx.org/licenses/CC-BY-SA-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-2.0","Creative Commons Attribution Share Alike 2.0 Generic","https://spdx.org/licenses/CC-BY-SA-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-2.0-UK","Creative Commons Attribution Share Alike 2.0 England and Wales","https://spdx.org/licenses/CC-BY-SA-2.0-UK.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-2.5","Creative Commons Attribution Share Alike 2.5 Generic","https://spdx.org/licenses/CC-BY-SA-2.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-3.0","Creative Commons Attribution Share Alike 3.0 Unported","https://spdx.org/licenses/CC-BY-SA-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-3.0-AT","Creative Commons Attribution Share Alike 3.0 Austria","https://spdx.org/licenses/CC-BY-SA-3.0-AT.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-4.0","Creative Commons Attribution Share Alike 4.0 International","https://spdx.org/licenses/CC-BY-SA-4.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-PDDC","Creative Commons Public Domain Dedication and Certification","https://spdx.org/licenses/CC-PDDC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC0-1.0","Creative Commons Zero v1.0 Universal","https://spdx.org/licenses/CC0-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CDDL-1.0","Common Development and Distribution License 1.0","https://spdx.org/licenses/CDDL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CDDL-1.1","Common Development and Distribution License 1.1","https://spdx.org/licenses/CDDL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CDLA-Permissive-1.0","Community Data License Agreement Permissive 1.0","https://spdx.org/licenses/CDLA-Permissive-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CDLA-Sharing-1.0","Community Data License Agreement Sharing 1.0","https://spdx.org/licenses/CDLA-Sharing-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CECILL-1.0","CeCILL Free Software License Agreement v1.0","https://spdx.org/licenses/CECILL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CECILL-1.1","CeCILL Free Software License Agreement v1.1","https://spdx.org/licenses/CECILL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CECILL-2.0","CeCILL Free Software License Agreement v2.0","https://spdx.org/licenses/CECILL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CECILL-2.1","CeCILL Free Software License Agreement v2.1","https://spdx.org/licenses/CECILL-2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CECILL-B","CeCILL-B Free Software License Agreement","https://spdx.org/licenses/CECILL-B.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CECILL-C","CeCILL-C Free Software License Agreement","https://spdx.org/licenses/CECILL-C.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CERN-OHL-1.1","CERN Open Hardware Licence v1.1","https://spdx.org/licenses/CERN-OHL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CERN-OHL-1.2","CERN Open Hardware Licence v1.2","https://spdx.org/licenses/CERN-OHL-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CERN-OHL-P-2.0","CERN Open Hardware Licence Version 2 - Permissive","https://spdx.org/licenses/CERN-OHL-P-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CERN-OHL-S-2.0","CERN Open Hardware Licence Version 2 - Strongly Reciprocal","https://spdx.org/licenses/CERN-OHL-S-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CERN-OHL-W-2.0","CERN Open Hardware Licence Version 2 - Weakly Reciprocal","https://spdx.org/licenses/CERN-OHL-W-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CNRI-Jython","CNRI Jython License","https://spdx.org/licenses/CNRI-Jython.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CNRI-Python","CNRI Python License","https://spdx.org/licenses/CNRI-Python.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CNRI-Python-GPL-Compatible","CNRI Python Open Source GPL Compatible License Agreement","https://spdx.org/licenses/CNRI-Python-GPL-Compatible.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CPAL-1.0","Common Public Attribution License 1.0","https://spdx.org/licenses/CPAL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CPL-1.0","Common Public License 1.0","https://spdx.org/licenses/CPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CPOL-1.02","Code Project Open License 1.02","https://spdx.org/licenses/CPOL-1.02.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CUA-OPL-1.0","CUA Office Public License v1.0","https://spdx.org/licenses/CUA-OPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Caldera","Caldera License","https://spdx.org/licenses/Caldera.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ClArtistic","Clarified Artistic License","https://spdx.org/licenses/ClArtistic.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Condor-1.1","Condor Public License v1.1","https://spdx.org/licenses/Condor-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Crossword","Crossword License","https://spdx.org/licenses/Crossword.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CrystalStacker","CrystalStacker License","https://spdx.org/licenses/CrystalStacker.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Cube","Cube License","https://spdx.org/licenses/Cube.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "D-FSL-1.0","Deutsche Freie Software Lizenz","https://spdx.org/licenses/D-FSL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DOC","DOC License","https://spdx.org/licenses/DOC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DRL-1.0","Detection Rule License 1.0","https://spdx.org/licenses/DRL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DSDP","DSDP License","https://spdx.org/licenses/DSDP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Dotseqn","Dotseqn License","https://spdx.org/licenses/Dotseqn.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ECL-1.0","Educational Community License v1.0","https://spdx.org/licenses/ECL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ECL-2.0","Educational Community License v2.0","https://spdx.org/licenses/ECL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EFL-1.0","Eiffel Forum License v1.0","https://spdx.org/licenses/EFL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EFL-2.0","Eiffel Forum License v2.0","https://spdx.org/licenses/EFL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EPICS","EPICS Open License","https://spdx.org/licenses/EPICS.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EPL-1.0","Eclipse Public License 1.0","https://spdx.org/licenses/EPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EPL-2.0","Eclipse Public License 2.0","https://spdx.org/licenses/EPL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EUDatagrid","EU DataGrid Software License","https://spdx.org/licenses/EUDatagrid.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EUPL-1.0","European Union Public License 1.0","https://spdx.org/licenses/EUPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EUPL-1.1","European Union Public License 1.1","https://spdx.org/licenses/EUPL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "EUPL-1.2","European Union Public License 1.2","https://spdx.org/licenses/EUPL-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Entessa","Entessa Public License v1.0","https://spdx.org/licenses/Entessa.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ErlPL-1.1","Erlang Public License v1.1","https://spdx.org/licenses/ErlPL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Eurosym","Eurosym License","https://spdx.org/licenses/Eurosym.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FSFAP","FSF All Permissive License","https://spdx.org/licenses/FSFAP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FSFUL","FSF Unlimited License","https://spdx.org/licenses/FSFUL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FSFULLR","FSF Unlimited License (with License Retention)","https://spdx.org/licenses/FSFULLR.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FTL","Freetype Project License","https://spdx.org/licenses/FTL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Fair","Fair License","https://spdx.org/licenses/Fair.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Frameworx-1.0","Frameworx Open License 1.0","https://spdx.org/licenses/Frameworx-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FreeBSD-DOC","FreeBSD Documentation License","https://spdx.org/licenses/FreeBSD-DOC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FreeImage","FreeImage Public License v1.0","https://spdx.org/licenses/FreeImage.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.1","GNU Free Documentation License v1.1","https://spdx.org/licenses/GFDL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.1-invariants-only","GNU Free Documentation License v1.1 only - invariants","https://spdx.org/licenses/GFDL-1.1-invariants-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.1-invariants-or-later","GNU Free Documentation License v1.1 or later - invariants","https://spdx.org/licenses/GFDL-1.1-invariants-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.1-no-invariants-only","GNU Free Documentation License v1.1 only - no invariants","https://spdx.org/licenses/GFDL-1.1-no-invariants-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.1-no-invariants-or-later","GNU Free Documentation License v1.1 or later - no invariants","https://spdx.org/licenses/GFDL-1.1-no-invariants-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.1-only","GNU Free Documentation License v1.1 only","https://spdx.org/licenses/GFDL-1.1-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.1-or-later","GNU Free Documentation License v1.1 or later","https://spdx.org/licenses/GFDL-1.1-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.2","GNU Free Documentation License v1.2","https://spdx.org/licenses/GFDL-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.2-invariants-only","GNU Free Documentation License v1.2 only - invariants","https://spdx.org/licenses/GFDL-1.2-invariants-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.2-invariants-or-later","GNU Free Documentation License v1.2 or later - invariants","https://spdx.org/licenses/GFDL-1.2-invariants-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.2-no-invariants-only","GNU Free Documentation License v1.2 only - no invariants","https://spdx.org/licenses/GFDL-1.2-no-invariants-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.2-no-invariants-or-later","GNU Free Documentation License v1.2 or later - no invariants","https://spdx.org/licenses/GFDL-1.2-no-invariants-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.2-only","GNU Free Documentation License v1.2 only","https://spdx.org/licenses/GFDL-1.2-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.2-or-later","GNU Free Documentation License v1.2 or later","https://spdx.org/licenses/GFDL-1.2-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.3","GNU Free Documentation License v1.3","https://spdx.org/licenses/GFDL-1.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.3-invariants-only","GNU Free Documentation License v1.3 only - invariants","https://spdx.org/licenses/GFDL-1.3-invariants-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.3-invariants-or-later","GNU Free Documentation License v1.3 or later - invariants","https://spdx.org/licenses/GFDL-1.3-invariants-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.3-no-invariants-only","GNU Free Documentation License v1.3 only - no invariants","https://spdx.org/licenses/GFDL-1.3-no-invariants-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.3-no-invariants-or-later","GNU Free Documentation License v1.3 or later - no invariants","https://spdx.org/licenses/GFDL-1.3-no-invariants-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.3-only","GNU Free Documentation License v1.3 only","https://spdx.org/licenses/GFDL-1.3-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GFDL-1.3-or-later","GNU Free Documentation License v1.3 or later","https://spdx.org/licenses/GFDL-1.3-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GL2PS","GL2PS License","https://spdx.org/licenses/GL2PS.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GLWTPL","Good Luck With That Public License","https://spdx.org/licenses/GLWTPL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-1.0","GNU General Public License v1.0 only","https://spdx.org/licenses/GPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-1.0+","GNU General Public License v1.0 or later","https://spdx.org/licenses/GPL-1.0+.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-1.0-only","GNU General Public License v1.0 only","https://spdx.org/licenses/GPL-1.0-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-1.0-or-later","GNU General Public License v1.0 or later","https://spdx.org/licenses/GPL-1.0-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0","GNU General Public License v2.0 only","https://spdx.org/licenses/GPL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0+","GNU General Public License v2.0 or later","https://spdx.org/licenses/GPL-2.0+.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0-only","GNU General Public License v2.0 only","https://spdx.org/licenses/GPL-2.0-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0-or-later","GNU General Public License v2.0 or later","https://spdx.org/licenses/GPL-2.0-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0-with-GCC-exception","GNU General Public License v2.0 w/GCC Runtime Library exception","https://spdx.org/licenses/GPL-2.0-with-GCC-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0-with-autoconf-exception","GNU General Public License v2.0 w/Autoconf exception","https://spdx.org/licenses/GPL-2.0-with-autoconf-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0-with-bison-exception","GNU General Public License v2.0 w/Bison exception","https://spdx.org/licenses/GPL-2.0-with-bison-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0-with-classpath-exception","GNU General Public License v2.0 w/Classpath exception","https://spdx.org/licenses/GPL-2.0-with-classpath-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-2.0-with-font-exception","GNU General Public License v2.0 w/Font exception","https://spdx.org/licenses/GPL-2.0-with-font-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-3.0","GNU General Public License v3.0 only","https://spdx.org/licenses/GPL-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-3.0+","GNU General Public License v3.0 or later","https://spdx.org/licenses/GPL-3.0+.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-3.0-only","GNU General Public License v3.0 only","https://spdx.org/licenses/GPL-3.0-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-3.0-or-later","GNU General Public License v3.0 or later","https://spdx.org/licenses/GPL-3.0-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-3.0-with-GCC-exception","GNU General Public License v3.0 w/GCC Runtime Library exception","https://spdx.org/licenses/GPL-3.0-with-GCC-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GPL-3.0-with-autoconf-exception","GNU General Public License v3.0 w/Autoconf exception","https://spdx.org/licenses/GPL-3.0-with-autoconf-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Giftware","Giftware License","https://spdx.org/licenses/Giftware.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Glide","3dfx Glide License","https://spdx.org/licenses/Glide.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Glulxe","Glulxe License","https://spdx.org/licenses/Glulxe.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND","Historical Permission Notice and Disclaimer","https://spdx.org/licenses/HPND.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-sell-variant","Historical Permission Notice and Disclaimer - sell variant","https://spdx.org/licenses/HPND-sell-variant.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HTMLTIDY","HTML Tidy License","https://spdx.org/licenses/HTMLTIDY.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HaskellReport","Haskell Language Report License","https://spdx.org/licenses/HaskellReport.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Hippocratic-2.1","Hippocratic License 2.1","https://spdx.org/licenses/Hippocratic-2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "IBM-pibs","IBM PowerPC Initialization and Boot Software","https://spdx.org/licenses/IBM-pibs.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ICU","ICU License","https://spdx.org/licenses/ICU.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "IJG","Independent JPEG Group License","https://spdx.org/licenses/IJG.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "IPA","IPA Font License","https://spdx.org/licenses/IPA.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "IPL-1.0","IBM Public License v1.0","https://spdx.org/licenses/IPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ISC","ISC License","https://spdx.org/licenses/ISC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ImageMagick","ImageMagick License","https://spdx.org/licenses/ImageMagick.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Imlib2","Imlib2 License","https://spdx.org/licenses/Imlib2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Info-ZIP","Info-ZIP License","https://spdx.org/licenses/Info-ZIP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Intel","Intel Open Source License","https://spdx.org/licenses/Intel.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Intel-ACPI","Intel ACPI Software License Agreement","https://spdx.org/licenses/Intel-ACPI.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Interbase-1.0","Interbase Public License v1.0","https://spdx.org/licenses/Interbase-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "JPNIC","Japan Network Information Center License","https://spdx.org/licenses/JPNIC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "JSON","JSON License","https://spdx.org/licenses/JSON.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "JasPer-2.0","JasPer License","https://spdx.org/licenses/JasPer-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LAL-1.2","Licence Art Libre 1.2","https://spdx.org/licenses/LAL-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LAL-1.3","Licence Art Libre 1.3","https://spdx.org/licenses/LAL-1.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-2.0","GNU Library General Public License v2 only","https://spdx.org/licenses/LGPL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-2.0+","GNU Library General Public License v2 or later","https://spdx.org/licenses/LGPL-2.0+.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-2.0-only","GNU Library General Public License v2 only","https://spdx.org/licenses/LGPL-2.0-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-2.0-or-later","GNU Library General Public License v2 or later","https://spdx.org/licenses/LGPL-2.0-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-2.1","GNU Lesser General Public License v2.1 only","https://spdx.org/licenses/LGPL-2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-2.1+","GNU Lesser General Public License v2.1 or later","https://spdx.org/licenses/LGPL-2.1+.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-2.1-only","GNU Lesser General Public License v2.1 only","https://spdx.org/licenses/LGPL-2.1-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-2.1-or-later","GNU Lesser General Public License v2.1 or later","https://spdx.org/licenses/LGPL-2.1-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-3.0","GNU Lesser General Public License v3.0 only","https://spdx.org/licenses/LGPL-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-3.0+","GNU Lesser General Public License v3.0 or later","https://spdx.org/licenses/LGPL-3.0+.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-3.0-only","GNU Lesser General Public License v3.0 only","https://spdx.org/licenses/LGPL-3.0-only.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPL-3.0-or-later","GNU Lesser General Public License v3.0 or later","https://spdx.org/licenses/LGPL-3.0-or-later.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LGPLLR","Lesser General Public License For Linguistic Resources","https://spdx.org/licenses/LGPLLR.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LPL-1.0","Lucent Public License Version 1.0","https://spdx.org/licenses/LPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LPL-1.02","Lucent Public License v1.02","https://spdx.org/licenses/LPL-1.02.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LPPL-1.0","LaTeX Project Public License v1.0","https://spdx.org/licenses/LPPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LPPL-1.1","LaTeX Project Public License v1.1","https://spdx.org/licenses/LPPL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LPPL-1.2","LaTeX Project Public License v1.2","https://spdx.org/licenses/LPPL-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LPPL-1.3a","LaTeX Project Public License v1.3a","https://spdx.org/licenses/LPPL-1.3a.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LPPL-1.3c","LaTeX Project Public License v1.3c","https://spdx.org/licenses/LPPL-1.3c.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Latex2e","Latex2e License","https://spdx.org/licenses/Latex2e.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Leptonica","Leptonica License","https://spdx.org/licenses/Leptonica.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LiLiQ-P-1.1","Licence Libre du Québec – Permissive version 1.1","https://spdx.org/licenses/LiLiQ-P-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LiLiQ-R-1.1","Licence Libre du Québec – Réciprocité version 1.1","https://spdx.org/licenses/LiLiQ-R-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LiLiQ-Rplus-1.1","Licence Libre du Québec – Réciprocité forte version 1.1","https://spdx.org/licenses/LiLiQ-Rplus-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Libpng","libpng License","https://spdx.org/licenses/Libpng.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Linux-OpenIB","Linux Kernel Variant of OpenIB.org license","https://spdx.org/licenses/Linux-OpenIB.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT","MIT License","https://spdx.org/licenses/MIT.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-0","MIT No Attribution","https://spdx.org/licenses/MIT-0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-CMU","CMU License","https://spdx.org/licenses/MIT-CMU.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-advertising","Enlightenment License (e16)","https://spdx.org/licenses/MIT-advertising.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-enna","enna License","https://spdx.org/licenses/MIT-enna.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-feh","feh License","https://spdx.org/licenses/MIT-feh.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-open-group","MIT Open Group variant","https://spdx.org/licenses/MIT-open-group.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MITNFA","MIT +no-false-attribs license","https://spdx.org/licenses/MITNFA.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MPL-1.0","Mozilla Public License 1.0","https://spdx.org/licenses/MPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MPL-1.1","Mozilla Public License 1.1","https://spdx.org/licenses/MPL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MPL-2.0","Mozilla Public License 2.0","https://spdx.org/licenses/MPL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MPL-2.0-no-copyleft-exception","Mozilla Public License 2.0 (no copyleft exception)","https://spdx.org/licenses/MPL-2.0-no-copyleft-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MS-PL","Microsoft Public License","https://spdx.org/licenses/MS-PL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MS-RL","Microsoft Reciprocal License","https://spdx.org/licenses/MS-RL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MTLL","Matrix Template Library License","https://spdx.org/licenses/MTLL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MakeIndex","MakeIndex License","https://spdx.org/licenses/MakeIndex.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MirOS","The MirOS Licence","https://spdx.org/licenses/MirOS.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Motosoto","Motosoto License","https://spdx.org/licenses/Motosoto.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MulanPSL-1.0","Mulan Permissive Software License, Version 1","https://spdx.org/licenses/MulanPSL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MulanPSL-2.0","Mulan Permissive Software License, Version 2","https://spdx.org/licenses/MulanPSL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Multics","Multics License","https://spdx.org/licenses/Multics.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Mup","Mup License","https://spdx.org/licenses/Mup.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NASA-1.3","NASA Open Source Agreement 1.3","https://spdx.org/licenses/NASA-1.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NBPL-1.0","Net Boolean Public License v1","https://spdx.org/licenses/NBPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NCGL-UK-2.0","Non-Commercial Government Licence","https://spdx.org/licenses/NCGL-UK-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NCSA","University of Illinois/NCSA Open Source License","https://spdx.org/licenses/NCSA.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NGPL","Nethack General Public License","https://spdx.org/licenses/NGPL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NIST-PD","NIST Public Domain Notice","https://spdx.org/licenses/NIST-PD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NIST-PD-fallback","NIST Public Domain Notice with license fallback","https://spdx.org/licenses/NIST-PD-fallback.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NLOD-1.0","Norwegian Licence for Open Government Data (NLOD) 1.0","https://spdx.org/licenses/NLOD-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NLPL","No Limit Public License","https://spdx.org/licenses/NLPL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NOSL","Netizen Open Source License","https://spdx.org/licenses/NOSL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NPL-1.0","Netscape Public License v1.0","https://spdx.org/licenses/NPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NPL-1.1","Netscape Public License v1.1","https://spdx.org/licenses/NPL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NPOSL-3.0","Non-Profit Open Software License 3.0","https://spdx.org/licenses/NPOSL-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NRL","NRL License","https://spdx.org/licenses/NRL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NTP","NTP License","https://spdx.org/licenses/NTP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NTP-0","NTP No Attribution","https://spdx.org/licenses/NTP-0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Naumen","Naumen Public License","https://spdx.org/licenses/Naumen.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Net-SNMP","Net-SNMP License","https://spdx.org/licenses/Net-SNMP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NetCDF","NetCDF license","https://spdx.org/licenses/NetCDF.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Newsletr","Newsletr License","https://spdx.org/licenses/Newsletr.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Nokia","Nokia Open Source License","https://spdx.org/licenses/Nokia.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Noweb","Noweb License","https://spdx.org/licenses/Noweb.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Nunit","Nunit License","https://spdx.org/licenses/Nunit.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "O-UDA-1.0","Open Use of Data Agreement v1.0","https://spdx.org/licenses/O-UDA-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OCCT-PL","Open CASCADE Technology Public License","https://spdx.org/licenses/OCCT-PL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OCLC-2.0","OCLC Research Public License 2.0","https://spdx.org/licenses/OCLC-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ODC-By-1.0","Open Data Commons Attribution License v1.0","https://spdx.org/licenses/ODC-By-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ODbL-1.0","Open Data Commons Open Database License v1.0","https://spdx.org/licenses/ODbL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OFL-1.0","SIL Open Font License 1.0","https://spdx.org/licenses/OFL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OFL-1.0-RFN","SIL Open Font License 1.0 with Reserved Font Name","https://spdx.org/licenses/OFL-1.0-RFN.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OFL-1.0-no-RFN","SIL Open Font License 1.0 with no Reserved Font Name","https://spdx.org/licenses/OFL-1.0-no-RFN.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OFL-1.1","SIL Open Font License 1.1","https://spdx.org/licenses/OFL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OFL-1.1-RFN","SIL Open Font License 1.1 with Reserved Font Name","https://spdx.org/licenses/OFL-1.1-RFN.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OFL-1.1-no-RFN","SIL Open Font License 1.1 with no Reserved Font Name","https://spdx.org/licenses/OFL-1.1-no-RFN.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OGC-1.0","OGC Software License, Version 1.0","https://spdx.org/licenses/OGC-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OGDL-Taiwan-1.0","Taiwan Open Government Data License, version 1.0","https://spdx.org/licenses/OGDL-Taiwan-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OGL-Canada-2.0","Open Government Licence - Canada","https://spdx.org/licenses/OGL-Canada-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OGL-UK-1.0","Open Government Licence v1.0","https://spdx.org/licenses/OGL-UK-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OGL-UK-2.0","Open Government Licence v2.0","https://spdx.org/licenses/OGL-UK-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OGL-UK-3.0","Open Government Licence v3.0","https://spdx.org/licenses/OGL-UK-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OGTSL","Open Group Test Suite License","https://spdx.org/licenses/OGTSL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-1.1","Open LDAP Public License v1.1","https://spdx.org/licenses/OLDAP-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-1.2","Open LDAP Public License v1.2","https://spdx.org/licenses/OLDAP-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-1.3","Open LDAP Public License v1.3","https://spdx.org/licenses/OLDAP-1.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-1.4","Open LDAP Public License v1.4","https://spdx.org/licenses/OLDAP-1.4.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.0","Open LDAP Public License v2.0 (or possibly 2.0A and 2.0B)","https://spdx.org/licenses/OLDAP-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.0.1","Open LDAP Public License v2.0.1","https://spdx.org/licenses/OLDAP-2.0.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.1","Open LDAP Public License v2.1","https://spdx.org/licenses/OLDAP-2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.2","Open LDAP Public License v2.2","https://spdx.org/licenses/OLDAP-2.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.2.1","Open LDAP Public License v2.2.1","https://spdx.org/licenses/OLDAP-2.2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.2.2","Open LDAP Public License 2.2.2","https://spdx.org/licenses/OLDAP-2.2.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.3","Open LDAP Public License v2.3","https://spdx.org/licenses/OLDAP-2.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.4","Open LDAP Public License v2.4","https://spdx.org/licenses/OLDAP-2.4.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.5","Open LDAP Public License v2.5","https://spdx.org/licenses/OLDAP-2.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.6","Open LDAP Public License v2.6","https://spdx.org/licenses/OLDAP-2.6.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.7","Open LDAP Public License v2.7","https://spdx.org/licenses/OLDAP-2.7.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLDAP-2.8","Open LDAP Public License v2.8","https://spdx.org/licenses/OLDAP-2.8.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OML","Open Market License","https://spdx.org/licenses/OML.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OPL-1.0","Open Public License v1.0","https://spdx.org/licenses/OPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OSET-PL-2.1","OSET Public License version 2.1","https://spdx.org/licenses/OSET-PL-2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OSL-1.0","Open Software License 1.0","https://spdx.org/licenses/OSL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OSL-1.1","Open Software License 1.1","https://spdx.org/licenses/OSL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OSL-2.0","Open Software License 2.0","https://spdx.org/licenses/OSL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OSL-2.1","Open Software License 2.1","https://spdx.org/licenses/OSL-2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OSL-3.0","Open Software License 3.0","https://spdx.org/licenses/OSL-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OpenSSL","OpenSSL License","https://spdx.org/licenses/OpenSSL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PDDL-1.0","Open Data Commons Public Domain Dedication & License 1.0","https://spdx.org/licenses/PDDL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PHP-3.0","PHP License v3.0","https://spdx.org/licenses/PHP-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PHP-3.01","PHP License v3.01","https://spdx.org/licenses/PHP-3.01.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PSF-2.0","Python Software Foundation License 2.0","https://spdx.org/licenses/PSF-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Parity-6.0.0","The Parity Public License 6.0.0","https://spdx.org/licenses/Parity-6.0.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Parity-7.0.0","The Parity Public License 7.0.0","https://spdx.org/licenses/Parity-7.0.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Plexus","Plexus Classworlds License","https://spdx.org/licenses/Plexus.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PolyForm-Noncommercial-1.0.0","PolyForm Noncommercial License 1.0.0","https://spdx.org/licenses/PolyForm-Noncommercial-1.0.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PolyForm-Small-Business-1.0.0","PolyForm Small Business License 1.0.0","https://spdx.org/licenses/PolyForm-Small-Business-1.0.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PostgreSQL","PostgreSQL License","https://spdx.org/licenses/PostgreSQL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Python-2.0","Python License 2.0","https://spdx.org/licenses/Python-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "QPL-1.0","Q Public License 1.0","https://spdx.org/licenses/QPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Qhull","Qhull License","https://spdx.org/licenses/Qhull.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RHeCos-1.1","Red Hat eCos Public License v1.1","https://spdx.org/licenses/RHeCos-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RPL-1.1","Reciprocal Public License 1.1","https://spdx.org/licenses/RPL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RPL-1.5","Reciprocal Public License 1.5","https://spdx.org/licenses/RPL-1.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RPSL-1.0","RealNetworks Public Source License v1.0","https://spdx.org/licenses/RPSL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RSA-MD","RSA Message-Digest License","https://spdx.org/licenses/RSA-MD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "RSCPL","Ricoh Source Code Public License","https://spdx.org/licenses/RSCPL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Rdisc","Rdisc License","https://spdx.org/licenses/Rdisc.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Ruby","Ruby License","https://spdx.org/licenses/Ruby.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SAX-PD","Sax Public Domain Notice","https://spdx.org/licenses/SAX-PD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SCEA","SCEA Shared Source License","https://spdx.org/licenses/SCEA.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SGI-B-1.0","SGI Free Software License B v1.0","https://spdx.org/licenses/SGI-B-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SGI-B-1.1","SGI Free Software License B v1.1","https://spdx.org/licenses/SGI-B-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SGI-B-2.0","SGI Free Software License B v2.0","https://spdx.org/licenses/SGI-B-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SHL-0.5","Solderpad Hardware License v0.5","https://spdx.org/licenses/SHL-0.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SHL-0.51","Solderpad Hardware License, Version 0.51","https://spdx.org/licenses/SHL-0.51.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SISSL","Sun Industry Standards Source License v1.1","https://spdx.org/licenses/SISSL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SISSL-1.2","Sun Industry Standards Source License v1.2","https://spdx.org/licenses/SISSL-1.2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SMLNJ","Standard ML of New Jersey License","https://spdx.org/licenses/SMLNJ.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SMPPL","Secure Messaging Protocol Public License","https://spdx.org/licenses/SMPPL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SNIA","SNIA Public License 1.1","https://spdx.org/licenses/SNIA.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SPL-1.0","Sun Public License v1.0","https://spdx.org/licenses/SPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SSH-OpenSSH","SSH OpenSSH license","https://spdx.org/licenses/SSH-OpenSSH.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SSH-short","SSH short notice","https://spdx.org/licenses/SSH-short.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SSPL-1.0","Server Side Public License, v 1","https://spdx.org/licenses/SSPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SWL","Scheme Widget Library (SWL) Software License Agreement","https://spdx.org/licenses/SWL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Saxpath","Saxpath License","https://spdx.org/licenses/Saxpath.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Sendmail","Sendmail License","https://spdx.org/licenses/Sendmail.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Sendmail-8.23","Sendmail License 8.23","https://spdx.org/licenses/Sendmail-8.23.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SimPL-2.0","Simple Public License 2.0","https://spdx.org/licenses/SimPL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Sleepycat","Sleepycat License","https://spdx.org/licenses/Sleepycat.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Spencer-86","Spencer License 86","https://spdx.org/licenses/Spencer-86.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Spencer-94","Spencer License 94","https://spdx.org/licenses/Spencer-94.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Spencer-99","Spencer License 99","https://spdx.org/licenses/Spencer-99.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "StandardML-NJ","Standard ML of New Jersey License","https://spdx.org/licenses/StandardML-NJ.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SugarCRM-1.1.3","SugarCRM Public License v1.1.3","https://spdx.org/licenses/SugarCRM-1.1.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TAPR-OHL-1.0","TAPR Open Hardware License v1.0","https://spdx.org/licenses/TAPR-OHL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TCL","TCL/TK License","https://spdx.org/licenses/TCL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TCP-wrappers","TCP Wrappers License","https://spdx.org/licenses/TCP-wrappers.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TMate","TMate Open Source License","https://spdx.org/licenses/TMate.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TORQUE-1.1","TORQUE v2.5+ Software License v1.1","https://spdx.org/licenses/TORQUE-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TOSL","Trusster Open Source License","https://spdx.org/licenses/TOSL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TU-Berlin-1.0","Technische Universitaet Berlin License 1.0","https://spdx.org/licenses/TU-Berlin-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TU-Berlin-2.0","Technische Universitaet Berlin License 2.0","https://spdx.org/licenses/TU-Berlin-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UCL-1.0","Upstream Compatibility License v1.0","https://spdx.org/licenses/UCL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UPL-1.0","Universal Permissive License v1.0","https://spdx.org/licenses/UPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Unicode-DFS-2015","Unicode License Agreement - Data Files and Software (2015)","https://spdx.org/licenses/Unicode-DFS-2015.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Unicode-DFS-2016","Unicode License Agreement - Data Files and Software (2016)","https://spdx.org/licenses/Unicode-DFS-2016.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Unicode-TOU","Unicode Terms of Use","https://spdx.org/licenses/Unicode-TOU.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Unlicense","The Unlicense","https://spdx.org/licenses/Unlicense.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "VOSTROM","VOSTROM Public License for Open Source","https://spdx.org/licenses/VOSTROM.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "VSL-1.0","Vovida Software License v1.0","https://spdx.org/licenses/VSL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Vim","Vim License","https://spdx.org/licenses/Vim.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "W3C","W3C Software Notice and License (2002-12-31)","https://spdx.org/licenses/W3C.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "W3C-19980720","W3C Software Notice and License (1998-07-20)","https://spdx.org/licenses/W3C-19980720.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "W3C-20150513","W3C Software Notice and Document License (2015-05-13)","https://spdx.org/licenses/W3C-20150513.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "WTFPL","Do What The F*ck You Want To Public License","https://spdx.org/licenses/WTFPL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Watcom-1.0","Sybase Open Watcom Public License 1.0","https://spdx.org/licenses/Watcom-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Wsuipa","Wsuipa License","https://spdx.org/licenses/Wsuipa.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "X11","X11 License","https://spdx.org/licenses/X11.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "XFree86-1.1","XFree86 License 1.1","https://spdx.org/licenses/XFree86-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "XSkat","XSkat License","https://spdx.org/licenses/XSkat.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Xerox","Xerox License","https://spdx.org/licenses/Xerox.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Xnet","X.Net License","https://spdx.org/licenses/Xnet.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "YPL-1.0","Yahoo! Public License v1.0","https://spdx.org/licenses/YPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "YPL-1.1","Yahoo! Public License v1.1","https://spdx.org/licenses/YPL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ZPL-1.1","Zope Public License 1.1","https://spdx.org/licenses/ZPL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ZPL-2.0","Zope Public License 2.0","https://spdx.org/licenses/ZPL-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ZPL-2.1","Zope Public License 2.1","https://spdx.org/licenses/ZPL-2.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Zed","Zed License","https://spdx.org/licenses/Zed.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Zend-2.0","Zend License v2.0","https://spdx.org/licenses/Zend-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Zimbra-1.3","Zimbra Public License v1.3","https://spdx.org/licenses/Zimbra-1.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Zimbra-1.4","Zimbra Public License v1.4","https://spdx.org/licenses/Zimbra-1.4.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Zlib","zlib License","https://spdx.org/licenses/Zlib.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "blessing","SQLite Blessing","https://spdx.org/licenses/blessing.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "bzip2-1.0.5","bzip2 and libbzip2 License v1.0.5","https://spdx.org/licenses/bzip2-1.0.5.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "bzip2-1.0.6","bzip2 and libbzip2 License v1.0.6","https://spdx.org/licenses/bzip2-1.0.6.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "copyleft-next-0.3.0","copyleft-next 0.3.0","https://spdx.org/licenses/copyleft-next-0.3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "copyleft-next-0.3.1","copyleft-next 0.3.1","https://spdx.org/licenses/copyleft-next-0.3.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "curl","curl License","https://spdx.org/licenses/curl.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "diffmark","diffmark license","https://spdx.org/licenses/diffmark.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "dvipdfm","dvipdfm License","https://spdx.org/licenses/dvipdfm.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "eCos-2.0","eCos license version 2.0","https://spdx.org/licenses/eCos-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "eGenix","eGenix.com Public License 1.1.0","https://spdx.org/licenses/eGenix.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "etalab-2.0","Etalab Open License 2.0","https://spdx.org/licenses/etalab-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "gSOAP-1.3b","gSOAP Public License v1.3b","https://spdx.org/licenses/gSOAP-1.3b.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "gnuplot","gnuplot License","https://spdx.org/licenses/gnuplot.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "iMatix","iMatix Standard Function Library Agreement","https://spdx.org/licenses/iMatix.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "libpng-2.0","PNG Reference Library version 2","https://spdx.org/licenses/libpng-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "libselinux-1.0","libselinux public domain notice","https://spdx.org/licenses/libselinux-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "libtiff","libtiff License","https://spdx.org/licenses/libtiff.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "mpich2","mpich2 License","https://spdx.org/licenses/mpich2.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "psfrag","psfrag License","https://spdx.org/licenses/psfrag.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "psutils","psutils License","https://spdx.org/licenses/psutils.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "wxWindows","wxWindows Library License","https://spdx.org/licenses/wxWindows.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "xinetd","xinetd License","https://spdx.org/licenses/xinetd.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "xpp","XPP License","https://spdx.org/licenses/xpp.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "zlib-acknowledgement","zlib/libpng License with Acknowledgement","https://spdx.org/licenses/zlib-acknowledgement.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-3.0-IGO","Creative Commons Attribution Non Commercial Share Alike 3.0 IGO","https://spdx.org/licenses/CC-BY-NC-SA-3.0-IGO.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "KiCad-libraries-exception","KiCad Libraries Exception","https://spdx.org/licenses/KiCad-libraries-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Linux-man-pages-copyleft","Linux man-pages Copyleft","https://spdx.org/licenses/Linux-man-pages-copyleft.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-Modern-Variant","MIT License Modern Variant","https://spdx.org/licenses/MIT-Modern-Variant.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NAIST-2003","Nara Institute of Science and Technology License (2003)","https://spdx.org/licenses/NAIST-2003.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NLOD-2.0","Norwegian Licence for Open Government Data (NLOD) 2.0","https://spdx.org/licenses/NLOD-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Baekmuk","Baekmuk License","https://spdx.org/licenses/Baekmuk.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-ND-3.0-DE","Creative Commons Attribution Non Commercial No Derivatives 3.0 Germany","https://spdx.org/licenses/CC-BY-NC-ND-3.0-DE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CDL-1.0","Common Documentation License 1.0","https://spdx.org/licenses/CDL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-3.0-DE","Creative Commons Attribution Share Alike 3.0 Germany","https://spdx.org/licenses/CC-BY-SA-3.0-DE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "App-s2p","App::s2p License","https://spdx.org/licenses/App-s2p.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-2.1-JP","Creative Commons Attribution Share Alike 2.1 Japan","https://spdx.org/licenses/CC-BY-SA-2.1-JP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-3.0-DE","Creative Commons Attribution Non Commercial 3.0 Germany","https://spdx.org/licenses/CC-BY-NC-3.0-DE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "COIL-1.0","Copyfree Open Innovation License","https://spdx.org/licenses/COIL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FDK-AAC","Fraunhofer FDK AAC Codec Library","https://spdx.org/licenses/FDK-AAC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-2.0-FR","Creative Commons Attribution-NonCommercial-ShareAlike 2.0 France","https://spdx.org/licenses/CC-BY-NC-SA-2.0-FR.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-No-Military-License","BSD 3-Clause No Military License","https://spdx.org/licenses/BSD-3-Clause-No-Military-License.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CDLA-Permissive-2.0","Community Data License Agreement Permissive 2.0","https://spdx.org/licenses/CDLA-Permissive-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SchemeReport","Scheme Language Report License","https://spdx.org/licenses/SchemeReport.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-ND-3.0-DE","Creative Commons Attribution No Derivatives 3.0 Germany","https://spdx.org/licenses/CC-BY-ND-3.0-DE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Community-Spec-1.0","Community Specification License 1.0","https://spdx.org/licenses/Community-Spec-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "mplus","mplus Font License","https://spdx.org/licenses/mplus.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "X11-distribute-modifications-variant","X11 License Distribution Modification Variant","https://spdx.org/licenses/X11-distribute-modifications-variant.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-3.0-DE","Creative Commons Attribution Non Commercial Share Alike 3.0 Germany","https://spdx.org/licenses/CC-BY-NC-SA-3.0-DE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-Modification","BSD 3-Clause Modification","https://spdx.org/licenses/BSD-3-Clause-Modification.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-2.0-UK","Creative Commons Attribution Non Commercial Share Alike 2.0 England and Wales","https://spdx.org/licenses/CC-BY-NC-SA-2.0-UK.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Arphic-1999","Arphic Public License","https://spdx.org/licenses/Arphic-1999.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Elastic-2.0","Elastic License 2.0","https://spdx.org/licenses/Elastic-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GD","GD License","https://spdx.org/licenses/GD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-3.0-NL","Creative Commons Attribution 3.0 Netherlands","https://spdx.org/licenses/CC-BY-3.0-NL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-2.5-AU","Creative Commons Attribution 2.5 Australia","https://spdx.org/licenses/CC-BY-2.5-AU.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OPUBL-1.0","Open Publication License v1.0","https://spdx.org/licenses/OPUBL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "C-UDA-1.0","Computational Use of Data Agreement v1.0","https://spdx.org/licenses/C-UDA-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DL-DE-BY-2.0","Data licence Germany – attribution – version 2.0","https://spdx.org/licenses/DL-DE-BY-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Jam","Jam License","https://spdx.org/licenses/Jam.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-3.0-DE","Creative Commons Attribution 3.0 Germany","https://spdx.org/licenses/CC-BY-3.0-DE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Bitstream-Vera","Bitstream Vera Font License","https://spdx.org/licenses/Bitstream-Vera.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Minpack","Minpack License","https://spdx.org/licenses/Minpack.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NICTA-1.0","NICTA Public Software License, Version 1.0","https://spdx.org/licenses/NICTA-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MS-LPL","Microsoft Limited Public License","https://spdx.org/licenses/MS-LPL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Python-2.0.1","Python License 2.0.1","https://spdx.org/licenses/Python-2.0.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "mpi-permissive","mpi Permissive License","https://spdx.org/licenses/mpi-permissive.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-3.0-IGO","Creative Commons Attribution 3.0 IGO","https://spdx.org/licenses/CC-BY-3.0-IGO.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LZMA-SDK-9.11-to-9.20","LZMA SDK License (versions 9.11 to 9.20)","https://spdx.org/licenses/LZMA-SDK-9.11-to-9.20.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LZMA-SDK-9.22","LZMA SDK License (versions 9.22 and beyond)","https://spdx.org/licenses/LZMA-SDK-9.22.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "checkmk","Checkmk License","https://spdx.org/licenses/checkmk.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FSFULLRWD","FSF Unlimited License (With License Retention and Warranty Disclaimer)","https://spdx.org/licenses/FSFULLRWD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Knuth-CTAN","Knuth CTAN License","https://spdx.org/licenses/Knuth-CTAN.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "libutil-David-Nugent","libutil David Nugent License","https://spdx.org/licenses/libutil-David-Nugent.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Bitstream-Charter","Bitstream Charter Font License","https://spdx.org/licenses/Bitstream-Charter.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Graphics-Gems","Graphics Gems License","https://spdx.org/licenses/Graphics-Gems.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-export-US","HPND with US Government export control warning","https://spdx.org/licenses/HPND-export-US.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "IJG-short","Independent JPEG Group License - short","https://spdx.org/licenses/IJG-short.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LOOP","Common Lisp LOOP License","https://spdx.org/licenses/LOOP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-Wu","MIT Tom Wu Variant","https://spdx.org/licenses/MIT-Wu.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Symlinks","Symlinks License","https://spdx.org/licenses/Symlinks.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TPDL","Time::ParseDate License","https://spdx.org/licenses/TPDL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TTWL","Text-Tabs+Wrap License","https://spdx.org/licenses/TTWL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-NC-SA-2.0-DE","Creative Commons Attribution Non Commercial Share Alike 2.0 Germany","https://spdx.org/licenses/CC-BY-NC-SA-2.0-DE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AdaCore-doc","AdaCore Doc License","https://spdx.org/licenses/AdaCore-doc.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Brian-Gladman-3-Clause","Brian Gladman 3-Clause License","https://spdx.org/licenses/Brian-Gladman-3-Clause.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-4.3RENO","BSD 4.3 RENO License","https://spdx.org/licenses/BSD-4.3RENO.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-4.3TAHOE","BSD 4.3 TAHOE License","https://spdx.org/licenses/BSD-4.3TAHOE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-Advertising-Acknowledgement","BSD Advertising Acknowledgement License","https://spdx.org/licenses/BSD-Advertising-Acknowledgement.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-Attribution-HPND-disclaimer","BSD with Attribution and HPND disclaimer","https://spdx.org/licenses/BSD-Attribution-HPND-disclaimer.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CFITSIO","CFITSIO License","https://spdx.org/licenses/CFITSIO.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Clips","Clips License","https://spdx.org/licenses/Clips.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CMU-Mach","CMU Mach License","https://spdx.org/licenses/CMU-Mach.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Cornell-Lossless-JPEG","Cornell Lossless JPEG License","https://spdx.org/licenses/Cornell-Lossless-JPEG.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HP-1986","Hewlett-Packard 1986 License","https://spdx.org/licenses/HP-1986.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-Markus-Kuhn","Historical Permission Notice and Disclaimer - Markus Kuhn variant","https://spdx.org/licenses/HPND-Markus-Kuhn.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-sell-variant-MIT-disclaimer","HPND sell variant with MIT disclaimer","https://spdx.org/licenses/HPND-sell-variant-MIT-disclaimer.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "IEC-Code-Components-EULA","IEC    Code Components End-user licence agreement","https://spdx.org/licenses/IEC-Code-Components-EULA.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "JPL-image","JPL Image Use Policy","https://spdx.org/licenses/JPL-image.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Kazlib","Kazlib License","https://spdx.org/licenses/Kazlib.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Martin-Birgmeier","Martin Birgmeier License","https://spdx.org/licenses/Martin-Birgmeier.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OFFIS","OFFIS License","https://spdx.org/licenses/OFFIS.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OpenPBS-2.3","OpenPBS v2.3 Software License","https://spdx.org/licenses/OpenPBS-2.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "QPL-1.0-INRIA-2004","Q Public License 1.0 - INRIA 2004 variant","https://spdx.org/licenses/QPL-1.0-INRIA-2004.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "snprintf","snprintf License","https://spdx.org/licenses/snprintf.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SunPro","SunPro License","https://spdx.org/licenses/SunPro.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TPL-1.0","THOR Public License 1.0","https://spdx.org/licenses/TPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UCAR","UCAR License","https://spdx.org/licenses/UCAR.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "w3m","w3m License","https://spdx.org/licenses/w3m.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "xlock","xlock License","https://spdx.org/licenses/xlock.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-SA-3.0-IGO","Creative Commons Attribution-ShareAlike 3.0 IGO","https://spdx.org/licenses/CC-BY-SA-3.0-IGO.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Latex2e-translated-notice","Latex2e with translated notice permission","https://spdx.org/licenses/Latex2e-translated-notice.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "metamail","metamail License","https://spdx.org/licenses/metamail.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-Festival","MIT Festival Variant","https://spdx.org/licenses/MIT-Festival.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NIST-Software","NIST Software License","https://spdx.org/licenses/NIST-Software.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OLFL-1.3","Open Logistics Foundation License Version 1.3","https://spdx.org/licenses/OLFL-1.3.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SGP4","SGP4 Permission Notice","https://spdx.org/licenses/SGP4.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UnixCrypt","UnixCrypt License","https://spdx.org/licenses/UnixCrypt.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OTHER","Custom Data Use Agreements/Terms of Use","https://dmptool.org/licenses/other", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ASWF-Digital-Assets-1.0","ASWF Digital Assets License version 1.0","https://spdx.org/licenses/ASWF-Digital-Assets-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "cryptsetup-OpenSSL-exception","cryptsetup OpenSSL exception","https://spdx.org/licenses/cryptsetup-OpenSSL-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "libpri-OpenH323-exception","libpri OpenH323 exception","https://spdx.org/licenses/libpri-OpenH323-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Linux-man-pages-one-para","Linux man-pages One Paragraph","https://spdx.org/licenses/Linux-man-pages-one-para.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TermReadKey","TermReadKey License","https://spdx.org/licenses/TermReadKey.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Widget-Workshop","Widget Workshop License","https://spdx.org/licenses/Widget-Workshop.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Xdebug-1.03","Xdebug License v 1.03","https://spdx.org/licenses/Xdebug-1.03.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Xfig","Xfig License","https://spdx.org/licenses/Xfig.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ASWF-Digital-Assets-1.1","ASWF Digital Assets License 1.1","https://spdx.org/licenses/ASWF-Digital-Assets-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Boehm-GC","Boehm-Demers-Weiser GC License","https://spdx.org/licenses/Boehm-GC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "dtoa","David M. Gay dtoa License","https://spdx.org/licenses/dtoa.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Inner-Net-2.0","Inner Net License v2.0","https://spdx.org/licenses/Inner-Net-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Linux-man-pages-1-para","Linux man-pages - 1 paragraph","https://spdx.org/licenses/Linux-man-pages-1-para.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Linux-man-pages-copyleft-2-para","Linux man-pages Copyleft - 2 paragraphs","https://spdx.org/licenses/Linux-man-pages-copyleft-2-para.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Linux-man-pages-copyleft-var","Linux man-pages Copyleft Variant","https://spdx.org/licenses/Linux-man-pages-copyleft-var.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OPL-UK-3.0","United    Kingdom Open Parliament Licence v3.0","https://spdx.org/licenses/OPL-UK-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "check-cvs","check-cvs License","https://spdx.org/licenses/check-cvs.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HP-1989","Hewlett-Packard 1989 License","https://spdx.org/licenses/HP-1989.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SL","SL License","https://spdx.org/licenses/SL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Soundex","Soundex License","https://spdx.org/licenses/Soundex.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Zeeff","Zeeff License","https://spdx.org/licenses/Zeeff.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GNU-compiler-exception","GNU Compiler Exception","https://spdx.org/licenses/GNU-compiler-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-testregex","MIT testregex Variant","https://spdx.org/licenses/MIT-testregex.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MMIXware","MMIXware License","https://spdx.org/licenses/MMIXware.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SANE-exception","SANE Exception","https://spdx.org/licenses/SANE-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "stunnel-exception","stunnel Exception","https://spdx.org/licenses/stunnel-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Texinfo-exception","Texinfo exception","https://spdx.org/licenses/Texinfo-exception.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TTYP0","TTYP0 License","https://spdx.org/licenses/TTYP0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "URT-RLE","Utah Raster Toolkit Run Length Encoded License","https://spdx.org/licenses/URT-RLE.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Adobe-Utopia","Adobe Utopia Font License","https://spdx.org/licenses/Adobe-Utopia.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-HP","Hewlett-Packard BSD variant license","https://spdx.org/licenses/BSD-3-Clause-HP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-Sun","BSD 3-Clause Sun Microsystems","https://spdx.org/licenses/BSD-3-Clause-Sun.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-Inferno-Nettverk","BSD-Inferno-Nettverk","https://spdx.org/licenses/BSD-Inferno-Nettverk.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-Systemics","Systemics BSD variant license","https://spdx.org/licenses/BSD-Systemics.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Cronyx","Cronyx License","https://spdx.org/licenses/Cronyx.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DL-DE-ZERO-2.0","Data licence Germany – zero – version 2.0","https://spdx.org/licenses/DL-DE-ZERO-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FBM","Fuzzy Bitmap License","https://spdx.org/licenses/FBM.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Ferguson-Twofish","Ferguson Twofish License","https://spdx.org/licenses/Ferguson-Twofish.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Furuseth","Furuseth License","https://spdx.org/licenses/Furuseth.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "fwlw","fwlw License","https://spdx.org/licenses/fwlw.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-DEC","Historical Permission Notice and Disclaimer - DEC variant","https://spdx.org/licenses/HPND-DEC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-doc-sell","Historical Permission Notice and Disclaimer - documentation sell variant","https://spdx.org/licenses/HPND-doc-sell.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-export-US-modify","HPND with US Government export control warning and modification rqmt","https://spdx.org/licenses/HPND-export-US-modify.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-Pbmplus","Historical Permission Notice and Disclaimer - Pbmplus variant","https://spdx.org/licenses/HPND-Pbmplus.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-sell-regexpr","Historical Permission Notice and Disclaimer - sell regexpr variant","https://spdx.org/licenses/HPND-sell-regexpr.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-UC","Historical Permission Notice and Disclaimer - University of California variant","https://spdx.org/licenses/HPND-UC.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Kastrup","Kastrup License","https://spdx.org/licenses/Kastrup.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "lsof","lsof License","https://spdx.org/licenses/lsof.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Lucida-Bitmap-Fonts","Lucida Bitmap Fonts License","https://spdx.org/licenses/Lucida-Bitmap-Fonts.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "magaz","magaz License","https://spdx.org/licenses/magaz.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "McPhee-slideshow","McPhee Slideshow License","https://spdx.org/licenses/McPhee-slideshow.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MPEG-SSG","MPEG Software Simulation","https://spdx.org/licenses/MPEG-SSG.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PADL","PADL License","https://spdx.org/licenses/PADL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "pnmstitch","pnmstitch License","https://spdx.org/licenses/pnmstitch.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "python-ldap","Python ldap License","https://spdx.org/licenses/python-ldap.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SGI-OpenGL","SGI OpenGL License","https://spdx.org/licenses/SGI-OpenGL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ssh-keyscan","ssh-keyscan License","https://spdx.org/licenses/ssh-keyscan.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "swrule","swrule License","https://spdx.org/licenses/swrule.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ulem","ulem License","https://spdx.org/licenses/ulem.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-flex","BSD 3-Clause Flex variant","https://spdx.org/licenses/BSD-3-Clause-flex.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-doc","Historical Permission Notice and Disclaimer - documentation variant","https://spdx.org/licenses/HPND-doc.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Adobe-Display-PostScript","Adobe Display PostScript License","https://spdx.org/licenses/Adobe-Display-PostScript.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AML-glslang","AML glslang variant License","https://spdx.org/licenses/AML-glslang.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DEC-3-Clause","DEC 3-Clause License","https://spdx.org/licenses/DEC-3-Clause.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DRL-1.1","Detection Rule License 1.1","https://spdx.org/licenses/DRL-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GCR-docs","Gnome GCR Documentation License","https://spdx.org/licenses/GCR-docs.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "hdparm","hdparm License","https://spdx.org/licenses/hdparm.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-sell-MIT-disclaimer-xserver","Historical Permission Notice and Disclaimer - sell xserver variant with MIT disclaimer","https://spdx.org/licenses/HPND-sell-MIT-disclaimer-xserver.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Pixar","Pixar License","https://spdx.org/licenses/Pixar.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "radvd","radvd License","https://spdx.org/licenses/radvd.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SAX-PD-2.0","Sax Public Domain Notice 2.0","https://spdx.org/licenses/SAX-PD-2.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FSFAP-no-warranty-disclaimer","FSF All Permissive License (without Warranty)","https://spdx.org/licenses/FSFAP-no-warranty-disclaimer.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-Kevlin-Henney","Historical Permission Notice and Disclaimer - Kevlin Henney variant","https://spdx.org/licenses/HPND-Kevlin-Henney.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "xkeyboard-config-Zinoviev","xkeyboard-config Zinoviev License","https://spdx.org/licenses/xkeyboard-config-Zinoviev.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-3-Clause-acpica","BSD 3-Clause acpica variant","https://spdx.org/licenses/BSD-3-Clause-acpica.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-Source-beginning-file","BSD Source Code Attribution - beginning of file variant","https://spdx.org/licenses/BSD-Source-beginning-file.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-Systemics-W3Works","Systemics W3Works BSD variant license","https://spdx.org/licenses/BSD-Systemics-W3Works.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Caldera-no-preamble","Caldera License (without preamble)","https://spdx.org/licenses/Caldera-no-preamble.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CC-BY-3.0-AU","Creative Commons Attribution 3.0 Australia","https://spdx.org/licenses/CC-BY-3.0-AU.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-MIT-disclaimer","Historical Permission Notice and Disclaimer with MIT disclaimer","https://spdx.org/licenses/HPND-MIT-disclaimer.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ISC-Veillard","ISC Veillard variant","https://spdx.org/licenses/ISC-Veillard.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "LPD-document","LPD Documentation License","https://spdx.org/licenses/LPD-document.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "mailprio","mailprio License","https://spdx.org/licenses/mailprio.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OpenSSL-standalone","OpenSSL License - standalone","https://spdx.org/licenses/OpenSSL-standalone.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "SSLeay-standalone","SSLeay License - standalone","https://spdx.org/licenses/SSLeay-standalone.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TGPPL-1.0","Transitive Grace Period Public Licence 1.0","https://spdx.org/licenses/TGPPL-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Unicode-3.0","Unicode License v3","https://spdx.org/licenses/Unicode-3.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "bcrypt-Solar-Designer","bcrypt Solar Designer License","https://spdx.org/licenses/bcrypt-Solar-Designer.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Brian-Gladman-2-Clause","Brian Gladman 2-Clause License","https://spdx.org/licenses/Brian-Gladman-2-Clause.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-2-Clause-Darwin","BSD 2-Clause - Ian Darwin variant","https://spdx.org/licenses/BSD-2-Clause-Darwin.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CMU-Mach-nodoc","CMU    Mach - no notices-in-documentation variant","https://spdx.org/licenses/CMU-Mach-nodoc.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "gtkbook","gtkbook License","https://spdx.org/licenses/gtkbook.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-Fenneberg-Livingston","Historical Permission Notice and Disclaimer - Fenneberg-Livingston variant","https://spdx.org/licenses/HPND-Fenneberg-Livingston.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-INRIA-IMAG","Historical Permission Notice and Disclaimer    - INRIA-IMAG variant","https://spdx.org/licenses/HPND-INRIA-IMAG.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Mackerras-3-Clause","Mackerras 3-Clause License","https://spdx.org/licenses/Mackerras-3-Clause.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Mackerras-3-Clause-acknowledgment","Mackerras 3-Clause - acknowledgment variant","https://spdx.org/licenses/Mackerras-3-Clause-acknowledgment.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-Khronos-old","MIT Khronos - old variant","https://spdx.org/licenses/MIT-Khronos-old.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OpenVision","OpenVision License","https://spdx.org/licenses/OpenVision.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "softSurfer","softSurfer License","https://spdx.org/licenses/softSurfer.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Sun-PPP","Sun PPP License","https://spdx.org/licenses/Sun-PPP.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UMich-Merit","Michigan/Merit Networks License","https://spdx.org/licenses/UMich-Merit.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AMD-newlib","AMD newlib License","https://spdx.org/licenses/AMD-newlib.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OAR","OAR License","https://spdx.org/licenses/OAR.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "threeparttable","threeparttable License","https://spdx.org/licenses/threeparttable.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "xzoom","xzoom License","https://spdx.org/licenses/xzoom.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "BSD-2-clause-first-lines","BSD 2-Clause - first lines requirement","https://spdx.org/licenses/BSD-2-Clause-first-lines.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Catharon","Catharon License","https://spdx.org/licenses/Catharon.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-UC-export-US","Historical Permission Notice and Disclaimer - University of California, US export warning","https://spdx.org/licenses/HPND-UC-export-US.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NCL","NCL Source Code License","https://spdx.org/licenses/NCL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "pkgconf","pkgconf License","https://spdx.org/licenses/pkgconf.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Sun-PPP-2000","Sun PPP License (2000)","https://spdx.org/licenses/Sun-PPP-2000.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "3D-Slicer-1.0","3D Slicer License v1.0","https://spdx.org/licenses/3D-Slicer-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "any-OSI","Any OSI License","https://spdx.org/licenses/any-OSI.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "cve-tou","Common Vulnerability Enumeration ToU License","https://spdx.org/licenses/cve-tou.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Gutmann","Gutmann License","https://spdx.org/licenses/Gutmann.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-export-US-acknowledgement","HPND with US Government export control warning and acknowledgment","https://spdx.org/licenses/HPND-export-US-acknowledgement.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-export2-US","HPND with US Government export control and 2 disclaimers","https://spdx.org/licenses/HPND-export2-US.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-Intel","Historical Permission Notice and Disclaimer - Intel variant","https://spdx.org/licenses/HPND-Intel.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-merchantability-variant","Historical Permission Notice and Disclaimer - merchantability variant","https://spdx.org/licenses/HPND-merchantability-variant.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-sell-variant-MIT-disclaimer-rev","HPND sell variant with MIT disclaimer - reverse","https://spdx.org/licenses/HPND-sell-variant-MIT-disclaimer-rev.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NCBI-PD","NCBI Public Domain Notice","https://spdx.org/licenses/NCBI-PD.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "PPL","Peer Production License","https://spdx.org/licenses/PPL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HIDAPI","HIDAPI License","https://spdx.org/licenses/HIDAPI.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "HPND-Netrek","Historical Permission Notice and Disclaimer - Netrek variant","https://spdx.org/licenses/HPND-Netrek.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Ruby-pty","Ruby pty extension license","https://spdx.org/licenses/Ruby-pty.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "X11-swapped","X11 swapped final paragraphs","https://spdx.org/licenses/X11-swapped.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DocBook-Schema","DocBook Schema License","https://spdx.org/licenses/DocBook-Schema.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DocBook-Stylesheet","DocBook Stylesheet License","https://spdx.org/licenses/DocBook-Stylesheet.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DocBook-XML","DocBook XML License","https://spdx.org/licenses/DocBook-XML.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "MIT-Click","MIT Click License","https://spdx.org/licenses/MIT-Click.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "TrustedQSL","TrustedQSL License","https://spdx.org/licenses/TrustedQSL.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Ubuntu-font-1.0","Ubuntu Font Licence v1.0","https://spdx.org/licenses/Ubuntu-font-1.0.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Boehm-GC-without-fee","Boehm-Demers-Weiser GC License (without fee)","https://spdx.org/licenses/Boehm-GC-without-fee.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `licenses` (`name`, `description`, `uri`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Sendmail-Open-Source-1.1","Sendmail Open Source License v1.1","https://spdx.org/licenses/Sendmail-Open-Source-1.1.json", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');

# Repositories
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GitHub","GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Over three million people use GitHub to build amazing things together. With the collaborative features of GitHub.com, our desktop and mobile apps, and GitHub Enterprise, it has never been easier for individuals and teams to write better code, faster. Originally founded by Tom Preston-Werner, Chris Wanstrath, and PJ Hyett to simplify sharing code, GitHub has grown into the largest code host in the world.","https://www.re3data.org/api/v1/repository/r3d100010375","https://github.com","[""open source software"", ""social networking"", ""web-based hosting service""]", "[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Zenodo","ZENODO builds and operates a simple and innovative service that enables researchers, scientists, EU projects and institutions to share and showcase multidisciplinary research results (data and publications) that are not part of the existing institutional or subject-based repositories of the research communities. ZENODO enables researchers, scientists, EU projects and institutions to: easily share the long tail of small research results in a wide variety of formats including text, spreadsheets, audio, video, and images across all fields of science. display their research results and get credited by making the research results citable and integrate them into existing reporting lines to funding agencies like the European Commission. easily access and reuse shared research results.","https://www.re3data.org/api/v1/repository/r3d100010468","https://zenodo.org/","[""FAIR"", ""multidisciplinary""]", "[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DRYAD","Dryad is an open data publishing platform and a community committed to the open availability and routine re-use of all research data. We publish data in any format and any discipline. All Dryad data undergoes a curation process and is published under a CC0 waiver to promote reuse.","https://www.re3data.org/api/v1/repository/r3d100000044","https://datadryad.org/stash","[""FAIR"", ""biodiversity"", ""interdisciplinary"", ""scientific and medical publications""]","[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Open Science Framework","The Open Science Framework (OSF) is part network of research materials, part version control system, and part collaboration software. The purpose of the software is to support the scientist's workflow and help increase the alignment between scientific values and scientific practices. Document and archive studies. Move the organization and management of study materials from the desktop into the cloud. Labs can organize, share, and archive study materials among team members. Web-based project management reduces the likelihood of losing study materials due to computer malfunction, changing personnel, or just forgetting where you put the damn thing. Share and find materials. With a click, make study materials public so that other researchers can find, use and cite them. Find materials by other researchers to avoid reinventing something that already exists. Detail individual contribution. Assign citable, contributor credit to any research material - tools, analysis scripts, methods, measures, data. Increase transparency. Make as much of the scientific workflow public as desired - as it is developed or after publication of reports. Find public projects here. Registration. Registering materials can certify what was done in advance of data analysis, or confirm the exact state of the project at important points of the lifecycle such as manuscript submission or at the onset of data collection. Discover public registrations here. Manage scientific workflow. A structured, flexible system can provide efficiency gain to workflow and clarity to project objectives, as pictured.","https://www.re3data.org/api/v1/repository/r3d100011137","https://osf.io/","[""archive"", ""multidisciplinary"", ""program management"", ""workflow""]","[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Gene Expression Omnibus","Gene Expression Omnibus: a public functional genomics data repository supporting MIAME-compliant data submissions. Array- and sequence-based data are accepted. Tools are provided to help users query and download experiments and curated gene expression profiles.","https://www.re3data.org/api/v1/repository/r3d100010283","http://www.ncbi.nlm.nih.gov/geo/","[""COVID-19"", ""Gene Expression"", ""Genetic Regulation"", ""Genomics Data""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NCBI","The National Center for Biotechnology Information advances science and health by providing access to biomedical and genomic information","https://www.re3data.org/api/v1/repository/r3d100010282","http://www.ncbi.nlm.nih.gov/","[""bioassays"", ""blast"", ""dna"", ""genes"", ""genomes"", ""proteins"", ""sequence analysis"", ""taxonomy""]","[""DISCIPLINARY"",""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Harvard Dataverse","The Harvard Dataverse is open to all scientific data from all disciplines worldwide. It includes the world's largest collection of social science research data. It is hosting data for projects, archives, researchers, journals, organizations, and institutions.","https://www.re3data.org/api/v1/repository/r3d100010051","https://dataverse.harvard.edu/","[""FAIR"", ""automes research"", ""demography"", ""epidemiology"", ""human  societies"", ""human behavior"", ""multidisciplinary"", ""social societies""]","[""DISCIPLINARY"",""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Inter-university Consortium for Political and Social Research","ICPSR maintains a data archive of more than 250,000 files of research in the social and behavioral sciences. It hosts 21 specialized collections of data in education, aging, criminal justice, substance abuse, terrorism, and other fields. ICPSR advances and expands social and behavioral research, acting as a global leader in data stewardship and providing rich data resources and responsive educational opportunities for present and future generations.","r3d100010255","https://www.icpsr.umich.edu/web/pages/","[""aging"", ""census"", ""criminal justice"", ""education"", ""engineering"", ""geography"", ""health"", ""icpsr"", ""inter-university consortium for political and social research"", ""legal systems"", ""nacjd"", ""organizational behavior"", ""political science"", ""politics"", ""social science"", ""substance abuse"", ""terrorism"", ""university of michigan"", ""urban studies"", ""voting behavior""]","[""DISCIPLINARY"",""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "CUHK Research Data Repository","The CUHK Research Data Repository serves as an institutional research data repository for The Chinese University of Hong Kong (CUHK). It facilitates CUHK researchers to deposit, publish, and curate their research data and for the worldwide to discover, access, and reuse the research data outputs at CUHK.","r3d100013661","https://researchdata.cuhk.edu.hk","[""FAIR"", ""TRUST"", ""multidisciplinary""]","[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UNC Dataverse","UNC Dataverse is an open-source repository software application for archiving, sharing, and accessing research data of all kinds. Each dataverse within the larger repository contains a multitude of datasets, and each dataset contains descriptive metadata and data files. UNC Dataverse is hosted by Odum Institute for Research in Social Science.","https://www.re3data.org/api/v1/repository/r3d100000005","https://dataverse.unc.edu/","[""FAIR"", ""census"", ""demographic survey"", ""demography"", ""human behavior"", ""human societies"", ""microdata"", ""multidisciplinary"", ""public health""]","[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NCBI dbGaP","The NCBI database of Genotypes and Phenotypes archives and distributes the results of studies that have investigated the interaction of genotype and phenotype, including genome-wide association studies, medical sequencing, molecular diagnostic assays, and association between genotype and non-clinical traits. The database provides summaries of studies, the contents of measured variables, and original study document text. dbGaP provides two types of access for users, open and controlled. Through the controlled access, users may access individual-level data such as phenotypic data tables and genotypes.","https://www.re3data.org/api/v1/repository/r3d100010788","http://www.ncbi.nlm.nih.gov/gap","[""cells - morphology"", ""genetic recombination"", ""genotype-environment interaction"", ""homology (Biology)"", ""molecular diagnosis"", ""morphology"", ""phenotype""]","[""DISCIPLINARY"",""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Mendeley Data","For datasets big and small; Store your research data online. Quickly and easily upload files of any type and we will host your research data for you. Your experimental research data will have a permanent home on the web that you can refer to.","https://www.re3data.org/api/v1/repository/r3d100011868","https://data.mendeley.com/","[""FAIR"", ""data collection platform"", ""multidisciplinary""]","[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Johns Hopkins Data Archive Dataverse Network","The Johns Hopkins Research Data Repository is an open access repository for Johns Hopkins University researchers to share their research data. The Repository is administered by professional curators at JHU Data Services, who will work with depositors to enable future discovery and reuse of your data, and ensure your data is Findable, Accessible, Interoperable and Reusable (FAIR). More information about the benefits of archiving data  can be found here: https://dataservices.library.jhu.edu/","https://www.re3data.org/api/v1/repository/r3d100011836","https://archive.data.jhu.edu/","[""FAIR"", ""multidsciplinary""]","[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Texas Data Repository","The Texas Data Repository is a platform for publishing and archiving datasets (and other data products) created by faculty, staff, and students at Texas higher education institutions. The repository is built in an open-source application called Dataverse, developed and used by Harvard University. The repository is hosted by the Texas Digital Library, a consortium of academic libraries in Texas with a proven history of providing shared technology services that support secure, reliable access to digital collections of research and scholarship. For a list of TDL participating institutions, please visit:  https://www.tdl.org/members/.","https://www.re3data.org/api/v1/repository/r3d100012385","https://data.tdl.org/","[""multidisciplinary""]","[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Sequence Read Archive","The Sequence Read Archive stores the raw sequencing data from such sequencing platforms as the Roche 454 GS System, the Illumina Genome Analyzer, the Applied Biosystems SOLiD System, the Helicos Heliscope, and the Complete Genomics. It archives the sequencing data associated with RNA-Seq, ChIP-Seq, Genomic and Transcriptomic assemblies, and 16S ribosomal RNA data.","https://www.re3data.org/api/v1/repository/r3d100010775","https://www.ncbi.nlm.nih.gov/sra","[""Chemicals"", ""DNA"", ""Genes"", ""Proteins"", ""RNA""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "National Science Foundation Public Access Respository","In support of NSF's plan for providing public access to its funded research, the NSF Public Access Repository (NSF-PAR) is the designated repository where NSF-funded investigators deposit peer-reviewed, published journal articles and juried conference papers. NSF-PAR also provides search mechanisms to enable you to find and use these articles and papers.","https://par.nsf.gov/","https://par.nsf.gov",NULL,"[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "figshare","figshare allows researchers to publish all of their research outputs in an easily citable, sharable and discoverable manner. All file formats can be published, including videos and datasets. Optional peer review process. figshare uses creative commons licensing. figshare+ repository allows figshare users to share larger datasets, over 20GB up to many TBs, see: https://plus.figshare.com/","https://www.re3data.org/api/v1/repository/r3d100010066","http://figshare.com/","[""FAIR"", ""data collection platform"", ""multidisciplinary""]","[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "GenBank","GenBank® is a comprehensive database that contains publicly available nucleotide sequences for almost 260 000 formally described species. These sequences are obtained primarily through submissions from individual laboratories and batch submissions from large-scale sequencing projects, including whole-genome shotgun (WGS) and environmental sampling projects. Most submissions are made using the web-based BankIt or standalone Sequin programs, and GenBank staff assigns accession numbers upon data receipt. Daily data exchange with the European Nucleotide Archive (ENA) and the DNA Data Bank of Japan (DDBJ) ensures worldwide coverage. GenBank is accessible through the NCBI Entrez retrieval system, which integrates data from the major DNA and protein sequence databases along with taxonomy, genome, mapping, protein structure and domain information, and the biomedical journal literature via PubMed. BLAST provides sequence similarity searches of GenBank and other sequence databases. Complete bimonthly releases and daily updates of the GenBank database are available by FTP.","https://www.re3data.org/api/v1/repository/r3d100010528","https://www.ncbi.nlm.nih.gov/genbank/","[""COVID-19"", ""DNA"", ""EST"", ""GSS"", ""STS"", ""bioSample"", ""clone"", ""epigenomics"", ""genomes"", ""metagenomes"", ""nucleotide"", ""sequence data"", ""transcriptome""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "JHU Research Data Repository","publicly accessible long-term data repository","https://archive.data.jhu.edu",NULL,NULL,"[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ImmPort","The Immunology Database and Analysis Portal (ImmPort) archives clinical study and trial data generated by NIAID/DAIT-funded investigators. Data types housed in ImmPort include subject assessments i.e., medical history, concomitant medications and adverse events as well as mechanistic assay data such as flow cytometry, ELISA, ELISPOT, etc.  ---  You won't need an ImmPort account to search for compelling studies, peruse study demographics, interventions and mechanistic assays. But why stop there? What you really want to do is download the study, look at each experiment in detail including individual ELISA results and flow cytometry files. Perhaps you want to take those flow cytometry files for a test drive using FLOCK in the ImmPort flow cytometry module. To download all that interesting data you will need to register for ImmPort access.","https://www.re3data.org/api/v1/repository/r3d100012529","https://www.immport.org/shared/home","[""FAIR"", ""allergy"", ""clinical research"", ""clinical trials"", ""cytometry"", ""data service"", ""immunology"", ""infectious disease"", ""ontology"", ""proteomics"", ""transcriptomics"", ""transplantation"", ""vaccine""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NSF Arctic Data Center","The Arctic Data Center is the primary data and software repository for the Arctic section of NSF Polar Programs. The Center helps the research community to reproducibly preserve and discover all products of NSF-funded research in the Arctic, including data, metadata, software, documents, and provenance that links these together.  The repository is open to contributions from NSF Arctic investigators, and data are released under an open license (CC-BY, CC0, depending on the choice of the contributor).  All science, engineering, and education research supported by the NSF Arctic research program are included, such as Natural Sciences (Geoscience, Earth Science, Oceanography, Ecology, Atmospheric Science, Biology, etc.) and Social Sciences (Archeology, Anthropology, Social Science, etc.). Key to the initiative is the partnership between NCEAS at UC Santa Barbara, DataONE, and NOAA’s NCEI, each of which bring critical capabilities to the Center. Infrastructure from the successful NSF-sponsored DataONE federation of data repositories enables data replication to NCEI, providing both offsite and institutional diversity that are critical to long term preservation.","https://www.re3data.org/api/v1/repository/r3d100011973","https://arcticdata.io","[""Arctic""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Open Repository of CRISPR Screens (ORCS) ","An open repository of CRISPR screens compiled through comprehensive curation efforts.","https://orcs.thebiogrid.org/",NULL,NULL,"[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Ocean Biogeographic Information System","OBIS strives to document the ocean's diversity, distribution and abundance of life. Created by the Census of Marine Life, OBIS is now part of the Intergovernmental Oceanographic Commission (IOC) of UNESCO, under its International Oceanographic Data and Information Exchange (IODE) programme","https://www.re3data.org/api/v1/repository/r3d100010088","http://iobis.org/","[""animalia"", ""archaea"", ""bacteria"", ""biodiversity"", ""chromista"", ""eukarya"", ""fungi"", ""life in the oceans"", ""maintainance of species distribution"", ""marine ecosystems"", ""marine organisms"", ""plantae"", ""protoctista"", ""protozoa""]","[""DISCIPLINARY"",""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Vivli","Vivli is a non-profit organization working to advance human health through the insights and discoveries gained by sharing and analyzing data. It is home to an independent global data-sharing and analytics platform which serves all elements of the international research community. The platform includes a data repository, in-depth search engine and cloud-based analytics, and harmonizes governance, policy and processes to make sharing data easier. Vivli acts as a neutral broker between data contributor and data user and the wider data sharing community.","https://www.re3data.org/api/v1/repository/r3d100012823","https://vivli.org/","[""clinical trial"", ""clinical trials"", ""data discovery methods"", ""health care"", ""individual participant-level data (IPD)"", ""medical treatments"", ""patients"", ""studies""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Hakai EIMS","Hakai Data stores and shares research information associated with Hakai Institute. The Hakai Institute is a scientific research institution that advances long-term research at remote locations on the coastal margin of British Columbia, Canada. Hakai Data Systems: Data Catalogue, Sensor Network, Geospatial Data, Weather Stations and Webcams, ERDDAP Data Server","https://www.re3data.org/api/v1/repository/r3d100013227","https://data.hakai.org/","[""LiDAR"", ""Oceanography"", ""coastal watershed"", ""deep time"", ""nearshore habitats"", ""ocean acidification"", ""ocean food webs"", ""salmon"", ""sensor network"", ""shellfish""]","[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "JMU Open Science Framework (OSF)","Open Science Framework (OSF) is a free, open source web application built to help researchers manage their workflows. The OSF is part collaboration tool, part version control software, and part data archive. The OSF connects to popular tools researchers already use, like Dropbox, Box, Github and Mendeley, to streamline workflows and increase efficiency.   The OSF integrates with the researcher's daily workflow. The OSF helps document and archive study designs, materials, and data. The OSF facilitates sharing of materials and data within a laboratory/group or across laboratories/groups. The OSF also facilitates transparency of laboratory research and provides a network design that details and credits individual contributions for all aspects of the research process. ","https://osf.io/institutions/jmu",NULL,NULL,"[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Ag Data Commons","Ag Data Commons provides access to a wide variety of open data relevant to agricultural research. We are a centralized repository for data already on the web, as well as for new data being published for the first time. While compliance with the U.S. Federal public access and open data directives is important, we aim to surpass them. Our goal is to foster innovative data re-use, integration, and visualization to support bigger, better science and policy.","https://www.re3data.org/api/v1/repository/r3d100011890","https://data.nal.usda.gov","[""agroecosystem"", ""agronomy"", ""bioenergy"", ""earth sciences"", ""economic statistics"", ""environmental sciences"", ""genomics"", ""hydrology"", ""life cycle assessment"", ""science"", ""soil"", ""sustainability""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NITRC","Neuroimaging Tools and Resources Collaboratory (NITRC) is currently a free one-stop-shop environment for science researchers that need resources such as neuroimaging analysis software, publicly available data sets, and computing power. Since its debut in 2007, NITRC has helped the neuroscience community to use software and data produced from research that, before NITRC, was routinely lost or disregarded, to make further discoveries. NITRC provides free access to data and enables pay-per-use cloud-based access to unlimited computing power, enabling worldwide scientific collaboration with minimal startup and cost. With NITRC and its components—the Resources Registry (NITRC-R), Image Repository (NITRC-IR), and Computational Environment (NITRC-CE)—a researcher can obtain pilot or proof-of-concept data to validate a hypothesis for a few dollars.","https://www.re3data.org/api/v1/repository/r3d100011515","https://www.nitrc.org/","[""clinical neuroinformatics"", ""genetics"", ""genomics"", ""information theory"", ""mental health"", ""neuroimaging"", ""neuroinformatics"", ""neuroinformatics"", ""neuroscience""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "UNL Data Repository","University of Nebraska Lincoln's Digital Commons site where data and publications can be made available to the public.","https://digitalcommons.unl.edu/unldr/","https://dataregistry.unl.edu",NULL,"[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "National Institute of Mental Health Data Archive","The National Institute of Mental Health Data Archive (NDA) makes available human subjects data collected from hundreds of research projects across many scientific domains. The NDA provides infrastructure for sharing research data, tools, methods, and analyses enabling collaborative science and discovery. De-identified human subjects data, harmonized to a common standard, are available to qualified researchers.  Summary data is available to all. The primary point of entry to the NDA is currently through the National Database for Autism Research (NDAR) website, which serves the autism research community.  All NDA repositories can be accessed through this website for data contribution and querying with other scientific communities, allowing for aggregation and secondary analysis of data.","https://www.re3data.org/api/v1/repository/r3d100012653","https://data-archive.nimh.nih.gov/","[""Adolescent Brain"", ""Connectome Coordination"", ""EEG"", ""Eye Tracking"", ""Osteoarthritis"", ""Research Domain Criteria"", ""autism"", ""fMRI"", ""mental illness""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ProteomeXchange","The ProteomeXchange consortium has been set up to provide a single point of submission of MS proteomics data to the main existing proteomics repositories, and to encourage the data exchange between them for optimal data dissemination. Current members accepting submissions are: The PRIDE PRoteomics IDEntifications database at the European Bioinformatics Institute focusing mainly on shotgun mass spectrometry proteomics data PeptideAtlas/PASSEL focusing on SRM/MRM datasets.","https://www.re3data.org/api/v1/repository/r3d100010692","http://www.proteomexchange.org/","[""MS proteomics data"", ""mass spectrometry"", ""protein / peptide identifications"", ""protein identification"", ""proteomics""]","[""DISCIPLINARY"",""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OpenICPSR","It is a common platform to deposit, store and share the research data in the area of social and behavioral sciences. openICPSR is undergoing development commiting international archiving standard and is currently free for all users to share their data up to a 2GB limit. It has a distribution network of over 760 institutions, governed by the Attribution 4.0 Creative Commons License and its' data catalog indexed by major search engines. OpenICPSR is a research data-sharing service that allows depositors to rapidly self-publish research data, enabling the public to access the data without charge. Otherwise via standard ICPSR deposits, one can publish and preserve reseach data with restricted-use having nominal charge. ICPSR is part of the Institute for Social Research at the University of Michigan.","https://www.re3data.org/api/v1/repository/r3d100012693","https://www.openicpsr.org/openicpsr/","[""FAIR"", ""gender issues"", ""health behaviour"", ""immigration"", ""political parties"", ""racial and ethnic""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Zenodo Database","A general purpose open repository developed under the European OpenAIRE program and operated by CERN.","https://zenodo.org/",NULL,NULL,"[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "NIMH Data Archive","NIMH's archive of research data","https://nda.nih.gov/","https://nda.nih.gov",NULL,"[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "4TU.ResearchData | science.engineering.design","4TU.ResearchData, previously known as 4TU.Centre for Research Data, is a research data repository dedicated to the science, engineering and design disciplines. It offers the knowledge, experience and the tools to manage, publish and find scientific research data in a standardized, secure and well-documented manner. 4TU.ResearchData provides the research community with: Customised advice and support on research data management; A long-term repository for scientific research data; Support for current research projects; Tools to enhance reuse of research data.","https://www.re3data.org/api/v1/repository/r3d100010216","https://data.4tu.nl/info/en/","[""FAIR"", ""Hydrology"", ""Planing Urban"", ""civil engineering"", ""design"", ""earth sciences"", ""technical sciences"", ""technology and construction"", ""urban area""]","[""DISCIPLINARY"",""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Academic Torrents","Academic Torrents is a distributed data repository. The academic torrents network is built for researchers, by researchers. Its distributed peer-to-peer library system automatically replicates your datasets on many servers, so you don't have to worry about managing your own servers or file availability. Everyone who has data becomes a mirror for those data so the system is fault-tolerant.","https://www.re3data.org/api/v1/repository/r3d100011043","https://academictorrents.com/","[""multidisciplinary""]","[""INSTITUTIONAL"",""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ClinicalTrials.gov","ClinicalTrials.gov is a website and online database of clinical research studies and information about their results. The purpose of ClinicalTrials.gov is to provide information about clinical research studies to the public, researchers, and health care professionals. The U.S. government does not review or approve the safety and science of all studies listed on this website.","https://www.re3data.org/api/v1/repository/r3d100010211","https://clinicaltrials.gov/","[""COVID-19"", ""behavioral"", ""clinical research"", ""clinical studies"", ""clinical trial"", ""clinical trial"", ""drug"", ""observation"", ""therapy""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Data and Specimen Hub","The Eunice Kennedy Shriver National Institute of Child Health and Human Development (NICHD) Data and Specimen Hub (DASH) is a centralized resource that allows researchers to share and access de-identified data from studies funded by NICHD. DASH also serves as a portal for requesting biospecimens from selected DASH studies.","https://www.re3data.org/api/v1/repository/r3d100012915","https://dash.nichd.nih.gov/","[""HIV/AIDS"", ""biomedical science"", ""biospecimens"", ""clinical studies"", ""critical care medicine"", ""data governance"", ""data management"", ""data submission, annotation, and curation"", ""demographics"", ""drug"", ""environmental samples"", ""medical trials"", ""musculoskeletal medicine"", ""obstetrics"", ""reproductive health""]","[""DISCIPLINARY"",""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DataverseNO","DataverseNO  is a curated, FAIR-aligned national generic repository for open research data from all academic disciplines. DataverseNO commits to facilitate that published data remain accessible and (re)usable in a long-term perspective. The repository is owned and operated by UiT The Arctic University of Norway. DataverseNO accepts submissions from researchers primarily from Norwegian research institutions. Datasets in DataverseNO are grouped into institutional collections as well as special collections. The technical infrastructure of the repository is based on the open source application Dataverse (https://dataverse.org), which is developed by an international developer and user community led by Harvard University.","https://www.re3data.org/api/v1/repository/r3d100012538","https://dataverse.no/","[""FAIR-enabling"", ""curated"", ""multi-disciplinary"", ""multi-institutional""]","[""DISCIPLINARY"",""INSTITUTIONAL"",""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Mouse Phenome Database","The Mouse Phenome Database (MPD; phenome.jax.org) has characterizations of hundreds of strains of laboratory mice to facilitate translational discoveries and to assist in selection of strains for experimental studies.","https://www.re3data.org/api/v1/repository/r3d100010552","http://phenome.jax.org/","[""blood"", ""bone"", ""brain"", ""cancer"", ""cardiovascular"", ""cell"", ""endocrine"", ""genetic"", ""immune system"", ""muscle"", ""nervous system""]","[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "AD Knowledge Portal","Discover and download Alzheimer's Disease data, analyses, and tools from the National Institute on Aging's Alzheimer's Disease Translational Research Program.","https://adknowledgeportal.synapse.org/",NULL,NULL, "[""GENERALIST""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "FlowRepository","FlowRepository is a web-based application accessible from a web browser that serves as an online database of flow cytometry experiments where users can query and download data collected and annotated according to the MIFlowCyt standard. It is primarily used as a data deposition place for experimental findings published in peer-reviewed journals in the flow cytometry field. FlowRepository is funded by the International Society for Advancement of Cytometry (ISAC) and powered by the Cytobank engine specifically extended for the purposes of this repository. FlowRepository has been developed by forking and extending Cytobank in 2011.","https://www.re3data.org/api/v1/repository/r3d100011280","https://flowrepository.org","[""FCM"", ""OMIP"", ""bioinformatics"", ""cytometry"", ""life sciences"", ""statistics""]", "[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "DANDI","The US BRAIN Initiative archive for publishing and sharing neurophysiology data including electrophysiology, optophysiology, and behavioral time-series, and images from immunostaining experiments.","r3d100013638","https://dandiarchive.org/","[""FAIR"", ""electrophysiology"", ""neurophsyiology"", ""optophysiology""]", "[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "OpenNeuro","The OpenNeuro project (formerly known as the OpenfMRI project) was established in 2010 to provide a resource for researchers interested in making their neuroimaging data openly available to the research community. It is managed by Russ Poldrack and Chris Gorgolewski of the Center for Reproducible Neuroscience at Stanford University. The project has been developed with funding from the National Science Foundation, National Institute of Drug Abuse, and the Laura and John Arnold Foundation.","https://www.re3data.org/api/v1/repository/r3d100010924","https://openneuro.org/","[""behavioral scientists"", ""biology"", ""brain"", ""brain chemistry"", ""cells"", ""magnetic resonance imaging"", ""molecular biology"", ""stimulants""]", "[""DISCIPLINARY""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "Biologic Specimen and Data Repository Information Coordinating Center","BioLINCC is the Biologic Specimen and Data Repository Coordinating Center. The center coordinates data and biospecimens from NHLBI-funded studies that are available for use in other approved studies. The center also creates teaching data sets from NHLBI-funded studies for use in training future biostatisticians.","https://www.re3data.org/api/v1/repository/r3d100010834","https://biolincc.nhlbi.nih.gov/home/","[""biological specimen"", ""blood"", ""diseases"", ""epidemiology"", ""health"", ""heart"", ""hematology"", ""lung""]", "[""DISCIPLINARY"",""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
INSERT INTO `repositories` (`name`, `description`, `uri`, `website`, `keywords`, `repositoryTypes`, `createdById`, `created`, `modifiedById`, `modified`) (SELECT "ASU Library Research Data Repository","The Arizona State University (ASU) Research Data Repository provides a platform for ASU-affiliated researchers to share, preserve, cite, and make research data accessible and discoverable. The ASU Research Data Repository provides a permanent digital identifier for research data, which complies with data sharing policies. The repository is powered by the Dataverse open-source application, developed and used by Harvard University. Both the ASU Research Data Repository and the KEEP Institutional Repository are managed by the ASU Library to ensure research produced at Arizona State University is discoverable and accessible to the global community.","https://www.re3data.org/api/v1/repository/r3d100013468","https://dataverse.asu.edu","[""FAIR"", ""multidisciplinary""]", "[""INSTITUTIONAL""]", users.id, CURDATE(), users.id, CURDATE() FROM users WHERE email = 'super@example.com');
